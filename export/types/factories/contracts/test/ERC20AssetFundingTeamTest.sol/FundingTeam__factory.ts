/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  FundingTeam,
  FundingTeamInterface,
} from "../../../../contracts/test/ERC20AssetFundingTeamTest.sol/FundingTeam";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20Token_",
        type: "address",
      },
      {
        internalType: "address",
        name: "acl_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "enum IProfileACL.ProfileAuthorizationStatus",
        name: "",
        type: "uint8",
      },
    ],
    name: "ProfileACLActionForbidden",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum IAsset.AssetSafeModeStatus",
        name: "status",
        type: "uint8",
      },
    ],
    name: "AssetSafeModeUpdated",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "assetAccessControl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetInfo",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "profileId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "version",
            type: "string",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "accessControl",
            type: "address",
          },
          {
            internalType: "enum IAsset.AssetType",
            name: "atype",
            type: "uint8",
          },
          {
            internalType: "enum IAsset.AssetSafeModeStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct IAsset.AssetInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetProfileId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetSafeMode",
    outputs: [
      {
        internalType: "enum IAsset.AssetSafeModeStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IAsset.AssetSafeModeStatus",
        name: "status",
        type: "uint8",
      },
    ],
    name: "assetSetSafeMode",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "assetToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetType",
    outputs: [
      {
        internalType: "enum IAsset.AssetType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "assetVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "tokenApprove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct IERC20Extra.BatchTransferRequest[]",
        name: "request",
        type: "tuple[]",
      },
    ],
    name: "tokenBatchTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct IERC20Extra.BatchTransferFromRequest[]",
        name: "request",
        type: "tuple[]",
      },
    ],
    name: "tokenBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "tokenDecreaseAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "tokenIncreaseAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "source",
            type: "address",
          },
          {
            internalType: "address",
            name: "dest",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "claimAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct IERC20Lockable.LockTokenRequest[]",
        name: "lockRequests",
        type: "tuple[]",
      },
    ],
    name: "tokenLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "tokenTransfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "tokenTransferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "lockId",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "string",
            name: "reason",
            type: "string",
          },
        ],
        internalType: "struct IERC20Lockable.UnLockTokenRequest[]",
        name: "unlockRequests",
        type: "tuple[]",
      },
    ],
    name: "unlockToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recepient",
        type: "address",
      },
    ],
    name: "withdrawBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001b9638038062001b968339810160408190526200003491620003a4565b6040518060400160405280600b81526020016a66756e64696e675465616d60a81b815250604051806040016040528060058152602001640312e302e360dc1b8152506040518060400160405280600b81526020016a5465737450726f66696c6560a81b8152508484620000ad826200037860201b60201c565b620000f45760405162461bcd60e51b815260206004820152601260248201527124b73b30b634b21022a92199182a37b5b2b760711b60448201526064015b60405180910390fd5b6040516301ffc9a760e01b81526336372b0760e01b60048201526001600160a01b038316906301ffc9a790602401602060405180830381865afa15801562000140573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001669190620003dc565b620001a95760405162461bcd60e51b815260206004820152601260248201527124b63632b3b0b61022a92199182a37b5b2b760711b6044820152606401620000eb565b6001600160a01b03811615620002cf576001600160a01b0381163b620002005760405162461bcd60e51b815260206004820152600b60248201526a125b9d985b1a59081050d360aa1b6044820152606401620000eb565b6040516301ffc9a760e01b815263047d056160e11b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa1580156200024c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002729190620003dc565b620002ae5760405162461bcd60e51b815260206004820152600b60248201526a125b1b1959d85b081050d360aa1b6044820152606401620000eb565b600080546001600160a01b0319166001600160a01b038316179055620002f6565b600080546001600160a01b03191673f5a6fefbe1a23653fb8a72b1730ba447c73fb9931790555b6003620003048682620004ac565b506004620003138582620004ac565b50600280546001600160a01b0319166001600160a01b0384161790556005805460ff191660011790556040516200034f90849060200162000578565b6040516020818303038152906040528051906020012060018190555050505050505050620005a9565b6001600160a01b03163b151590565b80516001600160a01b03811681146200039f57600080fd5b919050565b60008060408385031215620003b857600080fd5b620003c38362000387565b9150620003d36020840162000387565b90509250929050565b600060208284031215620003ef57600080fd5b815180151581146200040057600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200043257607f821691505b6020821081036200045357634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620004a757600081815260208120601f850160051c81016020861015620004825750805b601f850160051c820191505b81811015620004a3578281556001016200048e565b5050505b505050565b81516001600160401b03811115620004c857620004c862000407565b620004e081620004d984546200041d565b8462000459565b602080601f831160018114620005185760008415620004ff5750858301515b600019600386901b1c1916600185901b178555620004a3565b600085815260208120601f198616915b82811015620005495788860151825594840194600190910190840162000528565b5085821015620005685787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000825160005b818110156200059b57602081860181015185830152016200057f565b506000920191825250919050565b6115dd80620005b96000396000f3fe60806040526004361061012d5760003560e01c80639c42c5ec116100a5578063b69ef8a81161006c578063b69ef8a81461035a578063c66f24551461036d578063c9230c5d14610382578063cce6d80114610397578063e9dbebbd146103b7578063fc524064146103d757005b80639c42c5ec146102ba5780639c7597b2146102da578063a33b1229146102fa578063a40bee5014610318578063a52e8e601461033a57005b80633fe3347a116100f45780633fe3347a146101fe5780634cfb99491461021a57806368cdafe61461023a578063756af45f1461025a578063953fe9421461027a578063961974ba1461029a57005b806301ffc9a714610136578063053b8b991461016b5780630cd689f51461018a5780631083f761146101aa5780633c872e5f146101dc57005b3661013457005b005b34801561014257600080fd5b50610156610151366004610e81565b6103f7565b60405190151581526020015b60405180910390f35b34801561017757600080fd5b506001545b604051908152602001610162565b34801561019657600080fd5b506101566101a5366004610ec7565b610408565b3480156101b657600080fd5b506002546001600160a01b03165b6040516001600160a01b039091168152602001610162565b3480156101e857600080fd5b506101f1610499565b6040516101629190610f37565b34801561020a57600080fd5b5060016040516101629190610f74565b34801561022657600080fd5b5060055460ff166040516101629190610f92565b34801561024657600080fd5b50610156610255366004610ec7565b61052b565b34801561026657600080fd5b50610134610275366004610fa0565b610576565b34801561028657600080fd5b50610134610295366004610fbb565b6105bf565b3480156102a657600080fd5b506101566102b5366004611030565b610637565b3480156102c657600080fd5b506101346102d536600461106c565b6106d0565b3480156102e657600080fd5b506101566102f53660046110cf565b610712565b34801561030657600080fd5b506000546001600160a01b03166101c4565b34801561032457600080fd5b5061032d610842565b60405161016291906110f0565b34801561034657600080fd5b50610134610355366004610ec7565b610a77565b34801561036657600080fd5b504761017c565b34801561037957600080fd5b5061017c610b04565b34801561038e57600080fd5b506101f1610b76565b3480156103a357600080fd5b506101346103b236600461119e565b610b85565b3480156103c357600080fd5b506101346103d2366004611201565b610c56565b3480156103e357600080fd5b506101346103f2366004610ec7565b610c98565b600061040282610ce1565b92915050565b600061041a630cd689f560e01b610d06565b60025460405163095ea7b360e01b81526001600160a01b038581166004830152602482018590529091169063095ea7b3906044015b6020604051808303816000875af115801561046e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104929190611264565b9392505050565b6060600480546104a890611286565b80601f01602080910402602001604051908101604052809291908181526020018280546104d490611286565b80156105215780601f106104f657610100808354040283529160200191610521565b820191906000526020600020905b81548152906001019060200180831161050457829003601f168201915b5050505050905090565b600061053d633466d7f360e11b610d06565b60025460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018590529091169063a9059cbb9060440161044f565b61058663756af45f60e01b610d06565b6040516001600160a01b038216904780156108fc02916000818181858888f193505050501580156105bb573d6000803e3d6000fd5b5050565b6105cf63cce6d80160e01b610d06565b600254604051634a9ff4a160e11b81526001600160a01b039091169063953fe9429061060190859085906004016112e9565b600060405180830381600087803b15801561061b57600080fd5b505af115801561062f573d6000803e3d6000fd5b505050505050565b6000610649634b0cba5d60e11b610d06565b6002546040516323b872dd60e01b81526001600160a01b038681166004830152858116602483015260448201859052909116906323b872dd906064016020604051808303816000875af11580156106a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c89190611264565b949350505050565b6106e0632710b17b60e21b610d06565b60025460405163038d251d60e31b81526001600160a01b0390911690631c6928e89061060190859085906004016113c6565b60008054600154604051625e0be360e41b815283926001600160a01b0316916305e0be309161075191903090634e3acbd960e11b903390600401611432565b6020604051808303816000875af1158015610770573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107949190611463565b905060008160158111156107aa576107aa610f4a565b146107d3578060405163d8f7573d60e01b81526004016107ca9190611484565b60405180910390fd5b6005805484919060ff191660018360028111156107f2576107f2610f4a565b021790555030336001600160a01b03167f28f96d72c32e5791a0cb87cd75ccd24d30671b1044c06512ab88be89b053b8ca856040516108319190610f92565b60405180910390a350600192915050565b61088b60408051610100810182526000808252602082018190526060928201839052828201929092526080810182905260a081018290529060c082019081526020016000905290565b6040805161010081018252600154815260025491516370a0823160e01b8152306004820152909160208301916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156108e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090d919061149e565b81526020016003805461091f90611286565b80601f016020809104026020016040519081016040528092919081815260200182805461094b90611286565b80156109985780601f1061096d57610100808354040283529160200191610998565b820191906000526020600020905b81548152906001019060200180831161097b57829003601f168201915b50505050508152602001600480546109af90611286565b80601f01602080910402602001604051908101604052809291908181526020018280546109db90611286565b8015610a285780601f106109fd57610100808354040283529160200191610a28565b820191906000526020600020905b815481529060010190602001808311610a0b57829003601f168201915b50505091835250506002546001600160a01b0390811660208301526000541660408201526060016001815260055460209091019060ff166002811115610a7057610a70610f4a565b9052919050565b610a87630529747360e51b610d06565b60025460405163a457c2d760e01b81526001600160a01b038481166004830152602482018490529091169063a457c2d7906044015b6020604051808303816000875af1158015610adb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aff919061149e565b505050565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610b4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b71919061149e565b905090565b6060600380546104a890611286565b610b9563cce6d80160e01b610d06565b60005b81811015610c235730838383818110610bb357610bb36114b7565b610bc99260206080909202019081019150610fa0565b6001600160a01b031614610c115760405162461bcd60e51b815260206004820152600f60248201526e496c6c6567616c204164647265737360881b60448201526064016107ca565b80610c1b816114cd565b915050610b98565b506002546040516374bb18e760e01b81526001600160a01b03909116906374bb18e79061060190859085906004016114f4565b610c6663e9dbebbd60e01b610d06565b600254604051631f54aa5560e31b81526001600160a01b039091169063faa552a890610601908590859060040161155d565b610ca8633f14901960e21b610d06565b600254604051633950935160e01b81526001600160a01b0384811660048301526024820184905290911690633950935190604401610abc565b60006001600160e01b03198216636a6756a760e01b1480610402575061040282610e11565b600160055460ff166002811115610d1f57610d1f610f4a565b14610d615760405162461bcd60e51b815260206004820152601260248201527114d85999535bd9194e8814995a9958dd195960721b60448201526064016107ca565b60008054600154604051625e0be360e41b81526001600160a01b03909216916305e0be3091610d9891309087903390600401611432565b6020604051808303816000875af1158015610db7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ddb9190611463565b90506000816015811115610df157610df1610f4a565b146105bb578060405163d8f7573d60e01b81526004016107ca9190611484565b60006001600160e01b03198216632ce5e05560e01b148061040257506104028260006001600160e01b0319821663ce2ebc5760e01b1480610e6257506001600160e01b0319821663f20252a960e01b145b8061040257506301ffc9a760e01b6001600160e01b0319831614610402565b600060208284031215610e9357600080fd5b81356001600160e01b03198116811461049257600080fd5b80356001600160a01b0381168114610ec257600080fd5b919050565b60008060408385031215610eda57600080fd5b610ee383610eab565b946020939093013593505050565b6000815180845260005b81811015610f1757602081850181015186830182015201610efb565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006104926020830184610ef1565b634e487b7160e01b600052602160045260246000fd5b60048110610f7057610f70610f4a565b9052565b602081016104028284610f60565b60038110610f7057610f70610f4a565b602081016104028284610f82565b600060208284031215610fb257600080fd5b61049282610eab565b60008060208385031215610fce57600080fd5b823567ffffffffffffffff80821115610fe657600080fd5b818501915085601f830112610ffa57600080fd5b81358181111561100957600080fd5b8660208260051b850101111561101e57600080fd5b60209290920196919550909350505050565b60008060006060848603121561104557600080fd5b61104e84610eab565b925061105c60208501610eab565b9150604084013590509250925092565b6000806020838503121561107f57600080fd5b823567ffffffffffffffff8082111561109757600080fd5b818501915085601f8301126110ab57600080fd5b8135818111156110ba57600080fd5b86602060608302850101111561101e57600080fd5b6000602082840312156110e157600080fd5b81356003811061049257600080fd5b60208152815160208201526020820151604082015260006040830151610100806060850152611123610120850183610ef1565b91506060850151601f198584030160808601526111408382610ef1565b92505060018060a01b0360808601511660a085015260a085015161116f60c08601826001600160a01b03169052565b5060c085015161118260e0860182610f60565b5060e085015161119482860182610f82565b5090949350505050565b600080602083850312156111b157600080fd5b823567ffffffffffffffff808211156111c957600080fd5b818501915085601f8301126111dd57600080fd5b8135818111156111ec57600080fd5b8660208260071b850101111561101e57600080fd5b6000806020838503121561121457600080fd5b823567ffffffffffffffff8082111561122c57600080fd5b818501915085601f83011261124057600080fd5b81358181111561124f57600080fd5b8660208260061b850101111561101e57600080fd5b60006020828403121561127657600080fd5b8151801515811461049257600080fd5b600181811c9082168061129a57607f821691505b6020821081036112ba57634e487b7160e01b600052602260045260246000fd5b50919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60208082528181018390526000906040808401600586901b8501820187855b888110156113b857878303603f190184528135368b9003605e1901811261132e57600080fd5b8a018035845260606001600160a01b03611349898401610eab565b168886015286820135601e1983360301811261136457600080fd5b90910187810191903567ffffffffffffffff81111561138257600080fd5b80360383131561139157600080fd5b81888701526113a382870182856112c0565b96890196955050509186019150600101611308565b509098975050505050505050565b6020808252818101839052600090604080840186845b87811015611425576001600160a01b03806113f684610eab565b16845280611405878501610eab565b1684870152508184013584840152606092830192909101906001016113dc565b5090979650505050505050565b9384526001600160a01b0392831660208501526001600160e01b031991909116604084015216606082015260800190565b60006020828403121561147557600080fd5b81516016811061049257600080fd5b602081016016831061149857611498610f4a565b91905290565b6000602082840312156114b057600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6000600182016114ed57634e487b7160e01b600052601160045260246000fd5b5060010190565b6020808252818101839052600090604080840186845b87811015611425576001600160a01b038061152484610eab565b16845280611533878501610eab565b1684870152508184013584840152606080830135908401526080928301929091019060010161150a565b6020808252818101839052600090604080840186845b87811015611425576001600160a01b0361158c83610eab565b1683528185013585840152918301919083019060010161157356fea26469706673582212202abf24bd206ea9fa38ae1bebdd9ed1f6b04ca48bf4fb0c606f97e84a2fd284f964736f6c63430008130033";

type FundingTeamConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FundingTeamConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FundingTeam__factory extends ContractFactory {
  constructor(...args: FundingTeamConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    erc20Token_: PromiseOrValue<string>,
    acl_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FundingTeam> {
    return super.deploy(
      erc20Token_,
      acl_,
      overrides || {}
    ) as Promise<FundingTeam>;
  }
  override getDeployTransaction(
    erc20Token_: PromiseOrValue<string>,
    acl_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(erc20Token_, acl_, overrides || {});
  }
  override attach(address: string): FundingTeam {
    return super.attach(address) as FundingTeam;
  }
  override connect(signer: Signer): FundingTeam__factory {
    return super.connect(signer) as FundingTeam__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FundingTeamInterface {
    return new utils.Interface(_abi) as FundingTeamInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FundingTeam {
    return new Contract(address, _abi, signerOrProvider) as FundingTeam;
  }
}
