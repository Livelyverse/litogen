/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  FundingTeam,
  FundingTeamInterface,
} from "../../../../contracts/test/ERC20AssetFundingTeamTest.sol/FundingTeam";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20Token_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "enum IProfileACL.ProfileAuthorizationStatus",
        name: "",
        type: "uint8",
      },
    ],
    name: "ProfileACLActionForbidden",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "string",
        name: "oldProfile",
        type: "string",
      },
      {
        indexed: true,
        internalType: "string",
        name: "newProfile",
        type: "string",
      },
    ],
    name: "AssetProfileUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum IAsset.AssetSafeModeStatus",
        name: "status",
        type: "uint8",
      },
    ],
    name: "AssetSafeModeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "assetAccessControl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "profile",
            type: "string",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "version",
            type: "string",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "accessControl",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "enum IAsset.AssetType",
            name: "atype",
            type: "uint8",
          },
          {
            internalType: "enum IAsset.AssetSafeModeStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct IAsset.AssetInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetProfile",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetSafeMode",
    outputs: [
      {
        internalType: "enum IAsset.AssetSafeModeStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "profileName",
        type: "string",
      },
    ],
    name: "assetSetProfile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IAsset.AssetSafeModeStatus",
        name: "status",
        type: "uint8",
      },
    ],
    name: "assetSetSafeMode",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "assetToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetType",
    outputs: [
      {
        internalType: "enum IAsset.AssetType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "assetVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "tokenApprove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct IERC20Extra.BatchTransferRequest[]",
        name: "request",
        type: "tuple[]",
      },
    ],
    name: "tokenBatchTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct IERC20Extra.BatchTransferFromRequest[]",
        name: "request",
        type: "tuple[]",
      },
    ],
    name: "tokenBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "tokenDecreaseAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "tokenIncreaseAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "source",
            type: "address",
          },
          {
            internalType: "address",
            name: "dest",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "claimAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct IERC20Lockable.LockTokenRequest[]",
        name: "lockRequests",
        type: "tuple[]",
      },
    ],
    name: "tokenLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "tokenTransfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "tokenTransferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "lockId",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "string",
            name: "reason",
            type: "string",
          },
        ],
        internalType: "struct IERC20Lockable.UnLockTokenRequest[]",
        name: "unlockRequests",
        type: "tuple[]",
      },
    ],
    name: "unlockToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recepient",
        type: "address",
      },
    ],
    name: "withdrawBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620021123803806200211283398101604081905262000034916200024b565b6040518060400160405280600b81526020016a66756e64696e675465616d60a81b8152506040518060400160405280600b81526020016a5465737450726f66696c6560a81b815250826200008d6200024760201b60201c565b600080546001600160a01b0319166001600160a01b0392909216919091179055825160041115620000f45760405162461bcd60e51b815260206004820152600c60248201526b496e76616c6964204e616d6560a01b60448201526064015b60405180910390fd5b6001600160a01b0381163b620001425760405162461bcd60e51b815260206004820152601260248201527124b73b30b634b21022a92199182a37b5b2b760711b6044820152606401620000eb565b6040516301ffc9a760e01b81526336372b0760e01b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa1580156200018e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001b491906200027d565b620001f75760405162461bcd60e51b815260206004820152601260248201527124b63632b3b0b61022a92199182a37b5b2b760711b6044820152606401620000eb565b600462000205848262000346565b50600380546001600160a01b0319166001600160a01b0383161790556005805460ff1916600117905560026200023c838262000346565b505050505062000412565b3390565b6000602082840312156200025e57600080fd5b81516001600160a01b03811681146200027657600080fd5b9392505050565b6000602082840312156200029057600080fd5b815180151581146200027657600080fd5b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620002cc57607f821691505b602082108103620002ed57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200034157600081815260208120601f850160051c810160208610156200031c5750805b601f850160051c820191505b818110156200033d5782815560010162000328565b5050505b505050565b81516001600160401b03811115620003625762000362620002a1565b6200037a81620003738454620002b7565b84620002f3565b602080601f831160018114620003b25760008415620003995750858301515b600019600386901b1c1916600185901b1785556200033d565b600085815260208120601f198616915b82811015620003e357888601518255948401946001909101908401620003c2565b5085821015620004025787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611cf080620004226000396000f3fe6080604052600436106101735760003560e01c8063961974ba116100c8578063b69ef8a811610084578063cce6d80111610061578063cce6d80114610445578063e9dbebbd14610465578063f2fde38b14610485578063fc524064146104a557005b8063b69ef8a8146103fe578063c66f24551461041b578063c9230c5d1461043057005b8063961974ba1461033e5780639c42c5ec1461035e5780639c7597b21461037e578063a33b12291461039e578063a40bee50146103bc578063a52e8e60146103de57005b806358e9abf21161012f578063715018a61161010c578063715018a6146102cb578063756af45f146102e05780638da5cb5b14610300578063953fe9421461031e57005b806358e9abf2146102765780635bc213ec1461028b57806368cdafe6146102ab57005b806301ffc9a71461017c5780630cd689f5146101b15780631083f761146101d15780633c872e5f146102035780633fe3347a1461023a5780634cfb99491461025657005b3661017a57005b005b34801561018857600080fd5b5061019c6101973660046112fd565b6104c5565b60405190151581526020015b60405180910390f35b3480156101bd57600080fd5b5061019c6101cc366004611343565b6104d6565b3480156101dd57600080fd5b506003546001600160a01b03165b6040516001600160a01b0390911681526020016101a8565b34801561020f57600080fd5b506040805180820190915260058152640312e312e360dc1b60208201525b6040516101a891906113bd565b34801561024657600080fd5b5060016040516101a891906113fa565b34801561026257600080fd5b5060055460ff166040516101a89190611418565b34801561028257600080fd5b5061022d610567565b34801561029757600080fd5b5061017a6102a636600461143c565b6105f9565b3480156102b757600080fd5b5061019c6102c6366004611343565b610682565b3480156102d757600080fd5b5061017a6106cd565b3480156102ec57600080fd5b5061017a6102fb3660046114ed565b6106e1565b34801561030c57600080fd5b506000546001600160a01b03166101eb565b34801561032a57600080fd5b5061017a610339366004611508565b610726565b34801561034a57600080fd5b5061019c61035936600461157d565b6107f2565b34801561036a57600080fd5b5061017a6103793660046115b9565b61088b565b34801561038a57600080fd5b5061019c61039936600461161c565b6108cd565b3480156103aa57600080fd5b506001546001600160a01b03166101eb565b3480156103c857600080fd5b506103d1610a24565b6040516101a8919061163d565b3480156103ea57600080fd5b5061017a6103f9366004611343565b610c41565b34801561040a57600080fd5b50475b6040519081526020016101a8565b34801561042757600080fd5b5061040d610cce565b34801561043c57600080fd5b5061022d610d40565b34801561045157600080fd5b5061017a610460366004611719565b610d4f565b34801561047157600080fd5b5061017a61048036600461177c565b610e20565b34801561049157600080fd5b5061017a6104a03660046114ed565b610e62565b3480156104b157600080fd5b5061017a6104c0366004611343565b610ebd565b60006104d082610f06565b92915050565b60006104e8630cd689f560e01b610f2b565b60035460405163095ea7b360e01b81526001600160a01b038581166004830152602482018590529091169063095ea7b3906044015b6020604051808303816000875af115801561053c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056091906117df565b9392505050565b60606002805461057690611801565b80601f01602080910402602001604051908101604052809291908181526020018280546105a290611801565b80156105ef5780601f106105c4576101008083540402835291602001916105ef565b820191906000526020600020905b8154815290600101906020018083116105d257829003601f168201915b5050505050905090565b6106096316f084fb60e21b610f2b565b80604051610617919061183b565b6040518091039020600260405161062e9190611857565b604051809103902061063d3390565b6001600160a01b03167fe6fa79c1f2ea3c82570c2be794a3d87196e039c8b4a9aa1bb4cd1130649ec82a60405160405180910390a4600261067e8282611913565b5050565b6000610694633466d7f360e11b610f2b565b60035460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018590529091169063a9059cbb9060440161051d565b6106d5611037565b6106df600061108a565b565b6106f163756af45f60e01b610f2b565b6040516001600160a01b038216904780156108fc02916000818181858888f1935050505015801561067e573d6000803e3d6000fd5b6001546001600160a01b031661077a5760405162461bcd60e51b8152602060048201526014602482015273155b9b1bd8dac8139bdd0814dd5c1c1bdc9d195960621b60448201526064015b60405180910390fd5b61078a63cce6d80160e01b610f2b565b600354604051634a9ff4a160e11b81526001600160a01b039091169063953fe942906107bc90859085906004016119fc565b600060405180830381600087803b1580156107d657600080fd5b505af11580156107ea573d6000803e3d6000fd5b505050505050565b6000610804634b0cba5d60e11b610f2b565b6003546040516323b872dd60e01b81526001600160a01b038681166004830152858116602483015260448201859052909116906323b872dd906064016020604051808303816000875af115801561085f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088391906117df565b949350505050565b61089b632710b17b60e21b610f2b565b60035460405163038d251d60e31b81526001600160a01b0390911690631c6928e8906107bc9085908590600401611ad9565b60015460405160009182916001600160a01b03909116906305e0be30906108f990600290602001611857565b60408051808303601f190181529082905280516020909101206001600160e01b031960e084901b16825261093c913090634e3acbd960e11b903390600401611b45565b6020604051808303816000875af115801561095b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097f9190611b76565b90506000816015811115610995576109956113d0565b146109b5578060405163d8f7573d60e01b81526004016107719190611b97565b6005805484919060ff191660018360028111156109d4576109d46113d0565b021790555030336001600160a01b03167f28f96d72c32e5791a0cb87cd75ccd24d30671b1044c06512ab88be89b053b8ca85604051610a139190611418565b60405180910390a350600192915050565b610a2c611286565b604080516101208101918290526003546370a0823160e01b909252306101248201529081906001600160a01b03166370a082316101448301602060405180830381865afa158015610a81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa59190611bb1565b815260200160028054610ab790611801565b80601f0160208091040260200160405190810160405280929190818152602001828054610ae390611801565b8015610b305780601f10610b0557610100808354040283529160200191610b30565b820191906000526020600020905b815481529060010190602001808311610b1357829003601f168201915b5050505050815260200160048054610b4790611801565b80601f0160208091040260200160405190810160405280929190818152602001828054610b7390611801565b8015610bc05780601f10610b9557610100808354040283529160200191610bc0565b820191906000526020600020905b815481529060010190602001808311610ba357829003601f168201915b505050918352505060408051808201825260058152640312e312e360dc1b6020828101919091528301526003546001600160a01b03908116918301919091526001805482166060840152600054909116608083015260a090910190815260055460209091019060ff166002811115610c3a57610c3a6113d0565b9052919050565b610c51630529747360e51b610f2b565b60035460405163a457c2d760e01b81526001600160a01b038481166004830152602482018490529091169063a457c2d7906044015b6020604051808303816000875af1158015610ca5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc99190611bb1565b505050565b6003546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610d17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3b9190611bb1565b905090565b60606004805461057690611801565b610d5f63cce6d80160e01b610f2b565b60005b81811015610ded5730838383818110610d7d57610d7d611bca565b610d9392602060809092020190810191506114ed565b6001600160a01b031614610ddb5760405162461bcd60e51b815260206004820152600f60248201526e496c6c6567616c204164647265737360881b6044820152606401610771565b80610de581611be0565b915050610d62565b506003546040516374bb18e760e01b81526001600160a01b03909116906374bb18e7906107bc9085908590600401611c07565b610e3063e9dbebbd60e01b610f2b565b600354604051631f54aa5560e31b81526001600160a01b039091169063faa552a8906107bc9085908590600401611c70565b6001600160a01b038116610eb15760405162461bcd60e51b815260206004820152601660248201527513dddb98589b194e881058d8d95cdcc811195b9a595960521b6044820152606401610771565b610eba8161108a565b50565b610ecd633f14901960e21b610f2b565b600354604051633950935160e01b81526001600160a01b0384811660048301526024820184905290911690633950935190604401610c86565b60006001600160e01b03198216636a6756a760e01b14806104d057506104d082611216565b6001546001600160a01b03161561101b576001546040516000916001600160a01b0316906305e0be3090610f6490600290602001611857565b604051602081830303815290604052805190602001203085610f833390565b6040518563ffffffff1660e01b8152600401610fa29493929190611b45565b6020604051808303816000875af1158015610fc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe59190611b76565b90506000816015811115610ffb57610ffb6113d0565b1461067e578060405163d8f7573d60e01b81526004016107719190611b97565b630d021c7560e01b6001600160e01b0319821601610eba57610eba5b6000546001600160a01b031633146106df5760405162461bcd60e51b815260206004820152601660248201527513dddb98589b194e881058d8d95cdcc811195b9a595960521b6044820152606401610771565b61109a63f2fde38b60e01b610f2b565b6000546001546001600160a01b0391821691166110c0836001600160a01b03163b151590565b1561119a576040516301ffc9a760e01b815263047d056160e11b60048201526001600160a01b038416906301ffc9a790602401602060405180830381865afa158015611110573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113491906117df565b61116e5760405162461bcd60e51b815260206004820152600b60248201526a125b1b1959d85b081050d360aa1b6044820152606401610771565b600180546001600160a01b0385166001600160a01b0319918216179091556000805490911690556111c2565b600080546001600160a01b0385166001600160a01b0319918216179091556001805490911690555b6001600160a01b038084169083166111da57816111dc565b825b6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b60006001600160e01b03198216632ce5e05560e01b14806104d057506104d08260006001600160e01b03198216630c83e8fd60e41b148061126757506001600160e01b0319821663f20252a960e01b145b806104d057506301ffc9a760e01b6001600160e01b03198316146104d0565b6040518061012001604052806000815260200160608152602001606081526020016060815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b03168152602001600060038111156112f1576112f16113d0565b81526020016000905290565b60006020828403121561130f57600080fd5b81356001600160e01b03198116811461056057600080fd5b80356001600160a01b038116811461133e57600080fd5b919050565b6000806040838503121561135657600080fd5b61135f83611327565b946020939093013593505050565b60005b83811015611388578181015183820152602001611370565b50506000910152565b600081518084526113a981602086016020860161136d565b601f01601f19169290920160200192915050565b6020815260006105606020830184611391565b634e487b7160e01b600052602160045260246000fd5b600481106113f6576113f66113d0565b9052565b602081016104d082846113e6565b600381106113f6576113f66113d0565b602081016104d08284611408565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561144e57600080fd5b813567ffffffffffffffff8082111561146657600080fd5b818401915084601f83011261147a57600080fd5b81358181111561148c5761148c611426565b604051601f8201601f19908116603f011681019083821181831017156114b4576114b4611426565b816040528281528760208487010111156114cd57600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000602082840312156114ff57600080fd5b61056082611327565b6000806020838503121561151b57600080fd5b823567ffffffffffffffff8082111561153357600080fd5b818501915085601f83011261154757600080fd5b81358181111561155657600080fd5b8660208260051b850101111561156b57600080fd5b60209290920196919550909350505050565b60008060006060848603121561159257600080fd5b61159b84611327565b92506115a960208501611327565b9150604084013590509250925092565b600080602083850312156115cc57600080fd5b823567ffffffffffffffff808211156115e457600080fd5b818501915085601f8301126115f857600080fd5b81358181111561160757600080fd5b86602060608302850101111561156b57600080fd5b60006020828403121561162e57600080fd5b81356003811061056057600080fd5b602081528151602082015260006020830151610120806040850152611666610140850183611391565b91506040850151601f19808685030160608701526116848483611391565b93506060870151915080868503016080870152506116a28382611391565b92505060808501516116bf60a08601826001600160a01b03169052565b5060a08501516001600160a01b03811660c08601525060c08501516001600160a01b03811660e08601525060e08501516101006116fe818701836113e6565b860151905061170f85830182611408565b5090949350505050565b6000806020838503121561172c57600080fd5b823567ffffffffffffffff8082111561174457600080fd5b818501915085601f83011261175857600080fd5b81358181111561176757600080fd5b8660208260071b850101111561156b57600080fd5b6000806020838503121561178f57600080fd5b823567ffffffffffffffff808211156117a757600080fd5b818501915085601f8301126117bb57600080fd5b8135818111156117ca57600080fd5b8660208260061b850101111561156b57600080fd5b6000602082840312156117f157600080fd5b8151801515811461056057600080fd5b600181811c9082168061181557607f821691505b60208210810361183557634e487b7160e01b600052602260045260246000fd5b50919050565b6000825161184d81846020870161136d565b9190910192915050565b600080835461186581611801565b6001828116801561187d5760018114611892576118c1565b60ff19841687528215158302870194506118c1565b8760005260208060002060005b858110156118b85781548a82015290840190820161189f565b50505082870194505b50929695505050505050565b601f821115610cc957600081815260208120601f850160051c810160208610156118f45750805b601f850160051c820191505b818110156107ea57828155600101611900565b815167ffffffffffffffff81111561192d5761192d611426565b6119418161193b8454611801565b846118cd565b602080601f831160018114611976576000841561195e5750858301515b600019600386901b1c1916600185901b1785556107ea565b600085815260208120601f198616915b828110156119a557888601518255948401946001909101908401611986565b50858210156119c35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60208082528181018390526000906040808401600586901b8501820187855b88811015611acb57878303603f190184528135368b9003605e19018112611a4157600080fd5b8a018035845260606001600160a01b03611a5c898401611327565b168886015286820135601e19833603018112611a7757600080fd5b90910187810191903567ffffffffffffffff811115611a9557600080fd5b803603831315611aa457600080fd5b8188870152611ab682870182856119d3565b96890196955050509186019150600101611a1b565b509098975050505050505050565b6020808252818101839052600090604080840186845b87811015611b38576001600160a01b0380611b0984611327565b16845280611b18878501611327565b168487015250818401358484015260609283019290910190600101611aef565b5090979650505050505050565b9384526001600160a01b0392831660208501526001600160e01b031991909116604084015216606082015260800190565b600060208284031215611b8857600080fd5b81516016811061056057600080fd5b6020810160168310611bab57611bab6113d0565b91905290565b600060208284031215611bc357600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b600060018201611c0057634e487b7160e01b600052601160045260246000fd5b5060010190565b6020808252818101839052600090604080840186845b87811015611b38576001600160a01b0380611c3784611327565b16845280611c46878501611327565b16848701525081840135848401526060808301359084015260809283019290910190600101611c1d565b6020808252818101839052600090604080840186845b87811015611b38576001600160a01b03611c9f83611327565b16835281850135858401529183019190830190600101611c8656fea2646970667358221220cbace9908afdb417fe5c3a38d33a221fc6007b0744a08743a82225b0e8b53a8e64736f6c63430008130033";

type FundingTeamConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FundingTeamConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FundingTeam__factory extends ContractFactory {
  constructor(...args: FundingTeamConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    erc20Token_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FundingTeam> {
    return super.deploy(erc20Token_, overrides || {}) as Promise<FundingTeam>;
  }
  override getDeployTransaction(
    erc20Token_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(erc20Token_, overrides || {});
  }
  override attach(address: string): FundingTeam {
    return super.attach(address) as FundingTeam;
  }
  override connect(signer: Signer): FundingTeam__factory {
    return super.connect(signer) as FundingTeam__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FundingTeamInterface {
    return new utils.Interface(_abi) as FundingTeamInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FundingTeam {
    return new Contract(address, _abi, signerOrProvider) as FundingTeam;
  }
}
