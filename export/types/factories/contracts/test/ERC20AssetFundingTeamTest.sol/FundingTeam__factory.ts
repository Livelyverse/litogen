/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  FundingTeam,
  FundingTeamInterface,
} from "../../../../contracts/test/ERC20AssetFundingTeamTest.sol/FundingTeam";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20Token_",
        type: "address",
      },
      {
        internalType: "address",
        name: "acl_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "enum IProfileACL.ProfileAuthorizationStatus",
        name: "",
        type: "uint8",
      },
    ],
    name: "ProfileACLActionForbidden",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum IAsset.AssetSafeModeStatus",
        name: "status",
        type: "uint8",
      },
    ],
    name: "AssetSafeModeUpdated",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "assetAccessControl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetInfo",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "profileId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "version",
            type: "string",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "accessControl",
            type: "address",
          },
          {
            internalType: "enum IAsset.AssetType",
            name: "atype",
            type: "uint8",
          },
          {
            internalType: "enum IAsset.AssetSafeModeStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct IAsset.AssetInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetProfileId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetSafeMode",
    outputs: [
      {
        internalType: "enum IAsset.AssetSafeModeStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IAsset.AssetSafeModeStatus",
        name: "status",
        type: "uint8",
      },
    ],
    name: "assetSetSafeMode",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "assetToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetType",
    outputs: [
      {
        internalType: "enum IAsset.AssetType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "assetVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "tokenApprove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct IERC20Extra.BatchTransferRequest[]",
        name: "request",
        type: "tuple[]",
      },
    ],
    name: "tokenBatchTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct IERC20Extra.BatchTransferFromRequest[]",
        name: "request",
        type: "tuple[]",
      },
    ],
    name: "tokenBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "tokenDecreaseAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "tokenIncreaseAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "source",
            type: "address",
          },
          {
            internalType: "address",
            name: "dest",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "claimAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct IERC20Lockable.LockTokenRequest[]",
        name: "lockRequests",
        type: "tuple[]",
      },
    ],
    name: "tokenLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "tokenTransfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "tokenTransferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "lockId",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "string",
            name: "reason",
            type: "string",
          },
        ],
        internalType: "struct IERC20Lockable.UnLockTokenRequest[]",
        name: "unlockRequests",
        type: "tuple[]",
      },
    ],
    name: "unlockToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recepient",
        type: "address",
      },
    ],
    name: "withdrawBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001b0238038062001b02833981016040819052620000349162000376565b6040518060400160405280600b81526020016a66756e64696e675465616d60a81b8152506040518060400160405280600b81526020016a5465737450726f66696c6560a81b81525083836200008f826200034a60201b60201c565b620000d65760405162461bcd60e51b815260206004820152601260248201527124b73b30b634b21022a92199182a37b5b2b760711b60448201526064015b60405180910390fd5b6040516301ffc9a760e01b81526336372b0760e01b60048201526001600160a01b038316906301ffc9a790602401602060405180830381865afa15801562000122573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001489190620003ae565b6200018b5760405162461bcd60e51b815260206004820152601260248201527124b63632b3b0b61022a92199182a37b5b2b760711b6044820152606401620000cd565b6001600160a01b03811615620002b1576001600160a01b0381163b620001e25760405162461bcd60e51b815260206004820152600b60248201526a125b9d985b1a59081050d360aa1b6044820152606401620000cd565b6040516301ffc9a760e01b815263047d056160e11b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa1580156200022e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002549190620003ae565b620002905760405162461bcd60e51b815260206004820152600b60248201526a125b1b1959d85b081050d360aa1b6044820152606401620000cd565b600080546001600160a01b0319166001600160a01b038316179055620002d8565b600080546001600160a01b03191673f5a6fefbe1a23653fb8a72b1730ba447c73fb9931790555b6003620002e685826200047e565b50600280546001600160a01b0319166001600160a01b0384161790556004805460ff19166001179055604051620003229084906020016200054a565b604051602081830303815290604052805190602001206001819055505050505050506200057b565b6001600160a01b03163b151590565b80516001600160a01b03811681146200037157600080fd5b919050565b600080604083850312156200038a57600080fd5b620003958362000359565b9150620003a56020840162000359565b90509250929050565b600060208284031215620003c157600080fd5b81518015158114620003d257600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200040457607f821691505b6020821081036200042557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200047957600081815260208120601f850160051c81016020861015620004545750805b601f850160051c820191505b81811015620004755782815560010162000460565b5050505b505050565b81516001600160401b038111156200049a576200049a620003d9565b620004b281620004ab8454620003ef565b846200042b565b602080601f831160018114620004ea5760008415620004d15750858301515b600019600386901b1c1916600185901b17855562000475565b600085815260208120601f198616915b828110156200051b57888601518255948401946001909101908401620004fa565b50858210156200053a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000825160005b818110156200056d576020818601810151858301520162000551565b506000920191825250919050565b611577806200058b6000396000f3fe60806040526004361061012d5760003560e01c80639c42c5ec116100a5578063b69ef8a81161006c578063b69ef8a81461036f578063c66f245514610382578063c9230c5d14610397578063cce6d801146103ac578063e9dbebbd146103cc578063fc524064146103ec57005b80639c42c5ec146102cf5780639c7597b2146102ef578063a33b12291461030f578063a40bee501461032d578063a52e8e601461034f57005b80633fe3347a116100f45780633fe3347a146102135780634cfb99491461022f57806368cdafe61461024f578063756af45f1461026f578063953fe9421461028f578063961974ba146102af57005b806301ffc9a714610136578063053b8b991461016b5780630cd689f51461018a5780631083f761146101aa5780633c872e5f146101dc57005b3661013457005b005b34801561014257600080fd5b50610156610151366004610e1b565b61040c565b60405190151581526020015b60405180910390f35b34801561017757600080fd5b506001545b604051908152602001610162565b34801561019657600080fd5b506101566101a5366004610e61565b61041d565b3480156101b657600080fd5b506002546001600160a01b03165b6040516001600160a01b039091168152602001610162565b3480156101e857600080fd5b50604080518082019091526005815264189718171960d91b60208201525b6040516101629190610ed1565b34801561021f57600080fd5b5060016040516101629190610f0e565b34801561023b57600080fd5b5060045460ff166040516101629190610f2c565b34801561025b57600080fd5b5061015661026a366004610e61565b6104ae565b34801561027b57600080fd5b5061013461028a366004610f3a565b6104f9565b34801561029b57600080fd5b506101346102aa366004610f55565b610542565b3480156102bb57600080fd5b506101566102ca366004610fca565b6105ba565b3480156102db57600080fd5b506101346102ea366004611006565b610653565b3480156102fb57600080fd5b5061015661030a366004611069565b610695565b34801561031b57600080fd5b506000546001600160a01b03166101c4565b34801561033957600080fd5b506103426107c5565b604051610162919061108a565b34801561035b57600080fd5b5061013461036a366004610e61565b61098e565b34801561037b57600080fd5b504761017c565b34801561038e57600080fd5b5061017c610a1b565b3480156103a357600080fd5b50610206610a8d565b3480156103b857600080fd5b506101346103c7366004611138565b610b1f565b3480156103d857600080fd5b506101346103e736600461119b565b610bf0565b3480156103f857600080fd5b50610134610407366004610e61565b610c32565b600061041782610c7b565b92915050565b600061042f630cd689f560e01b610ca0565b60025460405163095ea7b360e01b81526001600160a01b038581166004830152602482018590529091169063095ea7b3906044015b6020604051808303816000875af1158015610483573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a791906111fe565b9392505050565b60006104c0633466d7f360e11b610ca0565b60025460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018590529091169063a9059cbb90604401610464565b61050963756af45f60e01b610ca0565b6040516001600160a01b038216904780156108fc02916000818181858888f1935050505015801561053e573d6000803e3d6000fd5b5050565b61055263cce6d80160e01b610ca0565b600254604051634a9ff4a160e11b81526001600160a01b039091169063953fe942906105849085908590600401611249565b600060405180830381600087803b15801561059e57600080fd5b505af11580156105b2573d6000803e3d6000fd5b505050505050565b60006105cc634b0cba5d60e11b610ca0565b6002546040516323b872dd60e01b81526001600160a01b038681166004830152858116602483015260448201859052909116906323b872dd906064016020604051808303816000875af1158015610627573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064b91906111fe565b949350505050565b610663632710b17b60e21b610ca0565b60025460405163038d251d60e31b81526001600160a01b0390911690631c6928e8906105849085908590600401611326565b60008054600154604051625e0be360e41b815283926001600160a01b0316916305e0be30916106d491903090634e3acbd960e11b903390600401611392565b6020604051808303816000875af11580156106f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071791906113c3565b9050600081601581111561072d5761072d610ee4565b14610756578060405163d8f7573d60e01b815260040161074d91906113e4565b60405180910390fd5b6004805484919060ff1916600183600281111561077557610775610ee4565b021790555030336001600160a01b03167f28f96d72c32e5791a0cb87cd75ccd24d30671b1044c06512ab88be89b053b8ca856040516107b49190610f2c565b60405180910390a350600192915050565b61080e60408051610100810182526000808252602082018190526060928201839052828201929092526080810182905260a081018290529060c082019081526020016000905290565b6040805161010081018252600154815260025491516370a0823160e01b8152306004820152909160208301916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561086c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089091906113fe565b8152602001600380546108a290611417565b80601f01602080910402602001604051908101604052809291908181526020018280546108ce90611417565b801561091b5780601f106108f05761010080835404028352916020019161091b565b820191906000526020600020905b8154815290600101906020018083116108fe57829003601f168201915b50505091835250506040805180820182526005815264189718171960d91b6020828101919091528301526002546001600160a01b03908116918301919091526000541660608201526080016001815260045460209091019060ff16600281111561098757610987610ee4565b9052919050565b61099e630529747360e51b610ca0565b60025460405163a457c2d760e01b81526001600160a01b038481166004830152602482018490529091169063a457c2d7906044015b6020604051808303816000875af11580156109f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1691906113fe565b505050565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610a64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8891906113fe565b905090565b606060038054610a9c90611417565b80601f0160208091040260200160405190810160405280929190818152602001828054610ac890611417565b8015610b155780601f10610aea57610100808354040283529160200191610b15565b820191906000526020600020905b815481529060010190602001808311610af857829003601f168201915b5050505050905090565b610b2f63cce6d80160e01b610ca0565b60005b81811015610bbd5730838383818110610b4d57610b4d611451565b610b639260206080909202019081019150610f3a565b6001600160a01b031614610bab5760405162461bcd60e51b815260206004820152600f60248201526e496c6c6567616c204164647265737360881b604482015260640161074d565b80610bb581611467565b915050610b32565b506002546040516374bb18e760e01b81526001600160a01b03909116906374bb18e790610584908590859060040161148e565b610c0063e9dbebbd60e01b610ca0565b600254604051631f54aa5560e31b81526001600160a01b039091169063faa552a89061058490859085906004016114f7565b610c42633f14901960e21b610ca0565b600254604051633950935160e01b81526001600160a01b03848116600483015260248201849052909116906339509351906044016109d3565b60006001600160e01b03198216636a6756a760e01b1480610417575061041782610dab565b600160045460ff166002811115610cb957610cb9610ee4565b14610cfb5760405162461bcd60e51b815260206004820152601260248201527114d85999535bd9194e8814995a9958dd195960721b604482015260640161074d565b60008054600154604051625e0be360e41b81526001600160a01b03909216916305e0be3091610d3291309087903390600401611392565b6020604051808303816000875af1158015610d51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7591906113c3565b90506000816015811115610d8b57610d8b610ee4565b1461053e578060405163d8f7573d60e01b815260040161074d91906113e4565b60006001600160e01b03198216632ce5e05560e01b148061041757506104178260006001600160e01b0319821663ce2ebc5760e01b1480610dfc57506001600160e01b0319821663f20252a960e01b145b8061041757506301ffc9a760e01b6001600160e01b0319831614610417565b600060208284031215610e2d57600080fd5b81356001600160e01b0319811681146104a757600080fd5b80356001600160a01b0381168114610e5c57600080fd5b919050565b60008060408385031215610e7457600080fd5b610e7d83610e45565b946020939093013593505050565b6000815180845260005b81811015610eb157602081850181015186830182015201610e95565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006104a76020830184610e8b565b634e487b7160e01b600052602160045260246000fd5b60048110610f0a57610f0a610ee4565b9052565b602081016104178284610efa565b60038110610f0a57610f0a610ee4565b602081016104178284610f1c565b600060208284031215610f4c57600080fd5b6104a782610e45565b60008060208385031215610f6857600080fd5b823567ffffffffffffffff80821115610f8057600080fd5b818501915085601f830112610f9457600080fd5b813581811115610fa357600080fd5b8660208260051b8501011115610fb857600080fd5b60209290920196919550909350505050565b600080600060608486031215610fdf57600080fd5b610fe884610e45565b9250610ff660208501610e45565b9150604084013590509250925092565b6000806020838503121561101957600080fd5b823567ffffffffffffffff8082111561103157600080fd5b818501915085601f83011261104557600080fd5b81358181111561105457600080fd5b866020606083028501011115610fb857600080fd5b60006020828403121561107b57600080fd5b8135600381106104a757600080fd5b602081528151602082015260208201516040820152600060408301516101008060608501526110bd610120850183610e8b565b91506060850151601f198584030160808601526110da8382610e8b565b92505060018060a01b0360808601511660a085015260a085015161110960c08601826001600160a01b03169052565b5060c085015161111c60e0860182610efa565b5060e085015161112e82860182610f1c565b5090949350505050565b6000806020838503121561114b57600080fd5b823567ffffffffffffffff8082111561116357600080fd5b818501915085601f83011261117757600080fd5b81358181111561118657600080fd5b8660208260071b8501011115610fb857600080fd5b600080602083850312156111ae57600080fd5b823567ffffffffffffffff808211156111c657600080fd5b818501915085601f8301126111da57600080fd5b8135818111156111e957600080fd5b8660208260061b8501011115610fb857600080fd5b60006020828403121561121057600080fd5b815180151581146104a757600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60208082528181018390526000906040808401600586901b8501820187855b8881101561131857878303603f190184528135368b9003605e1901811261128e57600080fd5b8a018035845260606001600160a01b036112a9898401610e45565b168886015286820135601e198336030181126112c457600080fd5b90910187810191903567ffffffffffffffff8111156112e257600080fd5b8036038313156112f157600080fd5b81888701526113038287018285611220565b96890196955050509186019150600101611268565b509098975050505050505050565b6020808252818101839052600090604080840186845b87811015611385576001600160a01b038061135684610e45565b16845280611365878501610e45565b16848701525081840135848401526060928301929091019060010161133c565b5090979650505050505050565b9384526001600160a01b0392831660208501526001600160e01b031991909116604084015216606082015260800190565b6000602082840312156113d557600080fd5b8151601681106104a757600080fd5b60208101601683106113f8576113f8610ee4565b91905290565b60006020828403121561141057600080fd5b5051919050565b600181811c9082168061142b57607f821691505b60208210810361144b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b60006001820161148757634e487b7160e01b600052601160045260246000fd5b5060010190565b6020808252818101839052600090604080840186845b87811015611385576001600160a01b03806114be84610e45565b168452806114cd878501610e45565b168487015250818401358484015260608083013590840152608092830192909101906001016114a4565b6020808252818101839052600090604080840186845b87811015611385576001600160a01b0361152683610e45565b1683528185013585840152918301919083019060010161150d56fea26469706673582212209cb577813cd81b251c5d30f8d03c271696d71008bc3ba97c5d37ce36eceed47064736f6c63430008130033";

type FundingTeamConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FundingTeamConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FundingTeam__factory extends ContractFactory {
  constructor(...args: FundingTeamConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    erc20Token_: PromiseOrValue<string>,
    acl_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FundingTeam> {
    return super.deploy(
      erc20Token_,
      acl_,
      overrides || {}
    ) as Promise<FundingTeam>;
  }
  override getDeployTransaction(
    erc20Token_: PromiseOrValue<string>,
    acl_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(erc20Token_, acl_, overrides || {});
  }
  override attach(address: string): FundingTeam {
    return super.attach(address) as FundingTeam;
  }
  override connect(signer: Signer): FundingTeam__factory {
    return super.connect(signer) as FundingTeam__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FundingTeamInterface {
    return new utils.Interface(_abi) as FundingTeamInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FundingTeam {
    return new Contract(address, _abi, signerOrProvider) as FundingTeam;
  }
}
