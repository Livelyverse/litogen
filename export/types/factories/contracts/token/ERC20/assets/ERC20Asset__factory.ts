/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC20Asset,
  ERC20AssetInterface,
} from "../../../../../contracts/token/ERC20/assets/ERC20Asset";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "assetName_",
        type: "string",
      },
      {
        internalType: "string",
        name: "profileName_",
        type: "string",
      },
      {
        internalType: "address",
        name: "erc20Token_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "enum IProfileACL.ProfileAuthorizationStatus",
        name: "",
        type: "uint8",
      },
    ],
    name: "ProfileACLActionForbidden",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "string",
        name: "oldProfile",
        type: "string",
      },
      {
        indexed: true,
        internalType: "string",
        name: "newProfile",
        type: "string",
      },
    ],
    name: "AssetProfileUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum IAsset.AssetSafeModeStatus",
        name: "status",
        type: "uint8",
      },
    ],
    name: "AssetSafeModeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "assetAccessControl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "profile",
            type: "string",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "version",
            type: "string",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "accessControl",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "enum IAsset.AssetType",
            name: "atype",
            type: "uint8",
          },
          {
            internalType: "enum IAsset.AssetSafeModeStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct IAsset.AssetInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetProfile",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetSafeMode",
    outputs: [
      {
        internalType: "enum IAsset.AssetSafeModeStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "profileName",
        type: "string",
      },
    ],
    name: "assetSetProfile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IAsset.AssetSafeModeStatus",
        name: "status",
        type: "uint8",
      },
    ],
    name: "assetSetSafeMode",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "assetToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetType",
    outputs: [
      {
        internalType: "enum IAsset.AssetType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "assetVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "tokenApprove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "tokenTransfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "tokenTransferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recepient",
        type: "address",
      },
    ],
    name: "withdrawBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200196f3803806200196f8339810160408190526200003491620002a4565b600080546001600160a01b031916331790558251600411156200008d5760405162461bcd60e51b815260206004820152600c60248201526b496e76616c6964204e616d6560a01b60448201526064015b60405180910390fd5b6001600160a01b0381163b620000db5760405162461bcd60e51b815260206004820152601260248201527124b73b30b634b21022a92199182a37b5b2b760711b604482015260640162000084565b6040516301ffc9a760e01b81526336372b0760e01b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa15801562000127573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200014d919062000331565b620001905760405162461bcd60e51b815260206004820152601260248201527124b63632b3b0b61022a92199182a37b5b2b760711b604482015260640162000084565b60046200019e8482620003eb565b50600380546001600160a01b0319166001600160a01b0383161790556005805460ff191660011790556002620001d58382620003eb565b50505050620004b7565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200020757600080fd5b81516001600160401b0380821115620002245762000224620001df565b604051601f8301601f19908116603f011681019082821181831017156200024f576200024f620001df565b816040528381526020925086838588010111156200026c57600080fd5b600091505b8382101562000290578582018301518183018401529082019062000271565b600093810190920192909252949350505050565b600080600060608486031215620002ba57600080fd5b83516001600160401b0380821115620002d257600080fd5b620002e087838801620001f5565b94506020860151915080821115620002f757600080fd5b506200030686828701620001f5565b604086015190935090506001600160a01b03811681146200032657600080fd5b809150509250925092565b6000602082840312156200034457600080fd5b815180151581146200035557600080fd5b9392505050565b600181811c908216806200037157607f821691505b6020821081036200039257634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003e657600081815260208120601f850160051c81016020861015620003c15750805b601f850160051c820191505b81811015620003e257828155600101620003cd565b5050505b505050565b81516001600160401b03811115620004075762000407620001df565b6200041f816200041884546200035c565b8462000398565b602080601f8311600181146200045757600084156200043e5750858301515b600019600386901b1c1916600185901b178555620003e2565b600085815260208120601f198616915b82811015620004885788860151825594840194600190910190840162000467565b5085821015620004a75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6114a880620004c76000396000f3fe6080604052600436106101175760003560e01c8063756af45f1161009a578063a40bee5011610061578063a40bee5014610328578063b69ef8a81461034a578063c66f245514610367578063c9230c5d1461037c578063f2fde38b1461039157005b8063756af45f1461028c5780638da5cb5b146102ac578063961974ba146102ca5780639c7597b2146102ea578063a33b12291461030a57005b80634cfb9949116100de5780634cfb99491461020257806358e9abf2146102225780635bc213ec1461023757806368cdafe614610257578063715018a61461027757005b806301ffc9a7146101205780630cd689f5146101555780631083f761146101755780633c872e5f146101a75780633fe3347a146101e657005b3661011e57005b005b34801561012c57600080fd5b5061014061013b366004610eac565b6103b1565b60405190151581526020015b60405180910390f35b34801561016157600080fd5b50610140610170366004610ef2565b610403565b34801561018157600080fd5b506003546001600160a01b03165b6040516001600160a01b03909116815260200161014c565b3480156101b357600080fd5b5060408051808201909152600d81526c189718971896a634ba37b3b2b760991b60208201525b60405161014c9190610f6c565b3480156101f257600080fd5b50600160405161014c9190610fa9565b34801561020e57600080fd5b5060055460ff1660405161014c9190610fc7565b34801561022e57600080fd5b506101d9610494565b34801561024357600080fd5b5061011e610252366004610feb565b610526565b34801561026357600080fd5b50610140610272366004610ef2565b6105af565b34801561028357600080fd5b5061011e6105fa565b34801561029857600080fd5b5061011e6102a736600461109c565b61060e565b3480156102b857600080fd5b506000546001600160a01b031661018f565b3480156102d657600080fd5b506101406102e53660046110b7565b610653565b3480156102f657600080fd5b506101406103053660046110f3565b6106ec565b34801561031657600080fd5b506001546001600160a01b031661018f565b34801561033457600080fd5b5061033d61084c565b60405161014c9190611114565b34801561035657600080fd5b50475b60405190815260200161014c565b34801561037357600080fd5b50610359610a6e565b34801561038857600080fd5b506101d9610ae0565b34801561039d57600080fd5b5061011e6103ac36600461109c565b610aef565b60006001600160e01b03198216630c83e8fd60e41b14806103e257506001600160e01b0319821663f20252a960e01b145b806103fd57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000610415630cd689f560e01b610b4a565b60035460405163095ea7b360e01b81526001600160a01b038581166004830152602482018590529091169063095ea7b3906044015b6020604051808303816000875af1158015610469573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048d91906111f0565b9392505050565b6060600280546104a390611212565b80601f01602080910402602001604051908101604052809291908181526020018280546104cf90611212565b801561051c5780601f106104f15761010080835404028352916020019161051c565b820191906000526020600020905b8154815290600101906020018083116104ff57829003601f168201915b5050505050905090565b6105366316f084fb60e21b610b4a565b80604051610544919061124c565b6040518091039020600260405161055b9190611268565b604051809103902061056a3390565b6001600160a01b03167fe6fa79c1f2ea3c82570c2be794a3d87196e039c8b4a9aa1bb4cd1130649ec82a60405160405180910390a460026105ab828261132d565b5050565b60006105c1633466d7f360e11b610b4a565b60035460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018590529091169063a9059cbb9060440161044a565b610602610c56565b61060c6000610ca9565b565b61061e63756af45f60e01b610b4a565b6040516001600160a01b038216904780156108fc02916000818181858888f193505050501580156105ab573d6000803e3d6000fd5b6000610665634b0cba5d60e11b610b4a565b6003546040516323b872dd60e01b81526001600160a01b038681166004830152858116602483015260448201859052909116906323b872dd906064016020604051808303816000875af11580156106c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e491906111f0565b949350505050565b60015460405160009182916001600160a01b03909116906305e0be309061071890600290602001611268565b60408051808303601f190181529082905280516020909101206001600160e01b031960e084901b16825261075b913090634e3acbd960e11b9033906004016113ed565b6020604051808303816000875af115801561077a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079e919061141e565b905060008160158111156107b4576107b4610f7f565b146107dd578060405163d8f7573d60e01b81526004016107d4919061143f565b60405180910390fd5b6005805484919060ff191660018360028111156107fc576107fc610f7f565b021790555030336001600160a01b03167f28f96d72c32e5791a0cb87cd75ccd24d30671b1044c06512ab88be89b053b8ca8560405161083b9190610fc7565b60405180910390a350600192915050565b610854610e35565b604080516101208101918290526003546370a0823160e01b909252306101248201529081906001600160a01b03166370a082316101448301602060405180830381865afa1580156108a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cd9190611459565b8152602001600280546108df90611212565b80601f016020809104026020016040519081016040528092919081815260200182805461090b90611212565b80156109585780601f1061092d57610100808354040283529160200191610958565b820191906000526020600020905b81548152906001019060200180831161093b57829003601f168201915b505050505081526020016004805461096f90611212565b80601f016020809104026020016040519081016040528092919081815260200182805461099b90611212565b80156109e85780601f106109bd576101008083540402835291602001916109e8565b820191906000526020600020905b8154815290600101906020018083116109cb57829003601f168201915b5050509183525050604080518082018252600d81526c189718971896a634ba37b3b2b760991b6020808301919091528301526003546001600160a01b03908116918301919091526001805482166060840152600054909116608083015260a082015260055460c09091019060ff166002811115610a6757610a67610f7f565b9052919050565b6003546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610ab7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610adb9190611459565b905090565b6060600480546104a390611212565b6001600160a01b038116610b3e5760405162461bcd60e51b815260206004820152601660248201527513dddb98589b194e881058d8d95cdcc811195b9a595960521b60448201526064016107d4565b610b4781610ca9565b50565b6001546001600160a01b031615610c3a576001546040516000916001600160a01b0316906305e0be3090610b8390600290602001611268565b604051602081830303815290604052805190602001203085610ba23390565b6040518563ffffffff1660e01b8152600401610bc194939291906113ed565b6020604051808303816000875af1158015610be0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c04919061141e565b90506000816015811115610c1a57610c1a610f7f565b146105ab578060405163d8f7573d60e01b81526004016107d4919061143f565b630d021c7560e01b6001600160e01b0319821601610b4757610b475b6000546001600160a01b0316331461060c5760405162461bcd60e51b815260206004820152601660248201527513dddb98589b194e881058d8d95cdcc811195b9a595960521b60448201526064016107d4565b610cb963f2fde38b60e01b610b4a565b6000546001546001600160a01b039182169116610cdf836001600160a01b03163b151590565b15610db9576040516301ffc9a760e01b815263047d056160e11b60048201526001600160a01b038416906301ffc9a790602401602060405180830381865afa158015610d2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5391906111f0565b610d8d5760405162461bcd60e51b815260206004820152600b60248201526a125b1b1959d85b081050d360aa1b60448201526064016107d4565b600180546001600160a01b0385166001600160a01b031991821617909155600080549091169055610de1565b600080546001600160a01b0385166001600160a01b0319918216179091556001805490911690555b6001600160a01b03808416908316610df95781610dfb565b825b6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b6040518061012001604052806000815260200160608152602001606081526020016060815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006003811115610ea057610ea0610f7f565b81526020016000905290565b600060208284031215610ebe57600080fd5b81356001600160e01b03198116811461048d57600080fd5b80356001600160a01b0381168114610eed57600080fd5b919050565b60008060408385031215610f0557600080fd5b610f0e83610ed6565b946020939093013593505050565b60005b83811015610f37578181015183820152602001610f1f565b50506000910152565b60008151808452610f58816020860160208601610f1c565b601f01601f19169290920160200192915050565b60208152600061048d6020830184610f40565b634e487b7160e01b600052602160045260246000fd5b60048110610fa557610fa5610f7f565b9052565b602081016103fd8284610f95565b60038110610fa557610fa5610f7f565b602081016103fd8284610fb7565b634e487b7160e01b600052604160045260246000fd5b600060208284031215610ffd57600080fd5b813567ffffffffffffffff8082111561101557600080fd5b818401915084601f83011261102957600080fd5b81358181111561103b5761103b610fd5565b604051601f8201601f19908116603f0116810190838211818310171561106357611063610fd5565b8160405282815287602084870101111561107c57600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000602082840312156110ae57600080fd5b61048d82610ed6565b6000806000606084860312156110cc57600080fd5b6110d584610ed6565b92506110e360208501610ed6565b9150604084013590509250925092565b60006020828403121561110557600080fd5b81356003811061048d57600080fd5b60208152815160208201526000602083015161012080604085015261113d610140850183610f40565b91506040850151601f198086850301606087015261115b8483610f40565b93506060870151915080868503016080870152506111798382610f40565b925050608085015161119660a08601826001600160a01b03169052565b5060a08501516001600160a01b03811660c08601525060c08501516001600160a01b03811660e08601525060e08501516101006111d581870183610f95565b86015190506111e685830182610fb7565b5090949350505050565b60006020828403121561120257600080fd5b8151801515811461048d57600080fd5b600181811c9082168061122657607f821691505b60208210810361124657634e487b7160e01b600052602260045260246000fd5b50919050565b6000825161125e818460208701610f1c565b9190910192915050565b600080835461127681611212565b6001828116801561128e57600181146112a3576112d2565b60ff19841687528215158302870194506112d2565b8760005260208060002060005b858110156112c95781548a8201529084019082016112b0565b50505082870194505b50929695505050505050565b601f82111561132857600081815260208120601f850160051c810160208610156113055750805b601f850160051c820191505b8181101561132457828155600101611311565b5050505b505050565b815167ffffffffffffffff81111561134757611347610fd5565b61135b816113558454611212565b846112de565b602080601f83116001811461139057600084156113785750858301515b600019600386901b1c1916600185901b178555611324565b600085815260208120601f198616915b828110156113bf578886015182559484019460019091019084016113a0565b50858210156113dd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b9384526001600160a01b0392831660208501526001600160e01b031991909116604084015216606082015260800190565b60006020828403121561143057600080fd5b81516016811061048d57600080fd5b602081016016831061145357611453610f7f565b91905290565b60006020828403121561146b57600080fd5b505191905056fea26469706673582212202119f2cbde1a73f14a6802a4f3a16fe9311f8e81f2a40c8fd2d217a8ef01c86f64736f6c63430008130033";

type ERC20AssetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20AssetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Asset__factory extends ContractFactory {
  constructor(...args: ERC20AssetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    assetName_: PromiseOrValue<string>,
    profileName_: PromiseOrValue<string>,
    erc20Token_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20Asset> {
    return super.deploy(
      assetName_,
      profileName_,
      erc20Token_,
      overrides || {}
    ) as Promise<ERC20Asset>;
  }
  override getDeployTransaction(
    assetName_: PromiseOrValue<string>,
    profileName_: PromiseOrValue<string>,
    erc20Token_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      assetName_,
      profileName_,
      erc20Token_,
      overrides || {}
    );
  }
  override attach(address: string): ERC20Asset {
    return super.attach(address) as ERC20Asset;
  }
  override connect(signer: Signer): ERC20Asset__factory {
    return super.connect(signer) as ERC20Asset__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20AssetInterface {
    return new utils.Interface(_abi) as ERC20AssetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Asset {
    return new Contract(address, _abi, signerOrProvider) as ERC20Asset;
  }
}
