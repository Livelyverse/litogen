/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC20Asset,
  ERC20AssetInterface,
} from "../../../../../contracts/token/ERC20/assets/ERC20Asset";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "assetName_",
        type: "string",
      },
      {
        internalType: "string",
        name: "assetVersion_",
        type: "string",
      },
      {
        internalType: "string",
        name: "profileName_",
        type: "string",
      },
      {
        internalType: "address",
        name: "erc20Token_",
        type: "address",
      },
      {
        internalType: "address",
        name: "acl_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "enum IProfileACL.ProfileAuthorizationStatus",
        name: "",
        type: "uint8",
      },
    ],
    name: "ProfileACLActionForbidden",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum IAsset.AssetSafeModeStatus",
        name: "status",
        type: "uint8",
      },
    ],
    name: "AssetSafeModeUpdated",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "assetAccessControl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetInfo",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "profileId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "version",
            type: "string",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "accessControl",
            type: "address",
          },
          {
            internalType: "enum IAsset.AssetType",
            name: "atype",
            type: "uint8",
          },
          {
            internalType: "enum IAsset.AssetSafeModeStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct IAsset.AssetInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetProfileId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetSafeMode",
    outputs: [
      {
        internalType: "enum IAsset.AssetSafeModeStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IAsset.AssetSafeModeStatus",
        name: "status",
        type: "uint8",
      },
    ],
    name: "assetSetSafeMode",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "assetToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetType",
    outputs: [
      {
        internalType: "enum IAsset.AssetType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "assetVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "tokenApprove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "tokenTransfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "tokenTransferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recepient",
        type: "address",
      },
    ],
    name: "withdrawBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001441380380620014418339810160408190526200003491620003f2565b6001600160a01b0382163b620000865760405162461bcd60e51b815260206004820152601260248201527124b73b30b634b21022a92199182a37b5b2b760711b60448201526064015b60405180910390fd5b6040516301ffc9a760e01b81526336372b0760e01b60048201526001600160a01b038316906301ffc9a790602401602060405180830381865afa158015620000d2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000f89190620004a9565b6200013b5760405162461bcd60e51b815260206004820152601260248201527124b63632b3b0b61022a92199182a37b5b2b760711b60448201526064016200007d565b6001600160a01b0381161562000261576001600160a01b0381163b620001925760405162461bcd60e51b815260206004820152600b60248201526a125b9d985b1a59081050d360aa1b60448201526064016200007d565b6040516301ffc9a760e01b815263047d056160e11b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa158015620001de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002049190620004a9565b620002405760405162461bcd60e51b815260206004820152600b60248201526a125b1b1959d85b081050d360aa1b60448201526064016200007d565b600080546001600160a01b0319166001600160a01b03831617905562000288565b600080546001600160a01b03191673f5a6fefbe1a23653fb8a72b1730ba447c73fb9931790555b600362000296868262000563565b506004620002a5858262000563565b50600280546001600160a01b0319166001600160a01b0384161790556005805460ff19166001179055604051620002e19084906020016200062f565b6040516020818303038152906040528051906020012060018190555050505050506200064d565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200033b57818101518382015260200162000321565b50506000910152565b600082601f8301126200035657600080fd5b81516001600160401b038082111562000373576200037362000308565b604051601f8301601f19908116603f011681019082821181831017156200039e576200039e62000308565b81604052838152866020858801011115620003b857600080fd5b620003cb8460208301602089016200031e565b9695505050505050565b80516001600160a01b0381168114620003ed57600080fd5b919050565b600080600080600060a086880312156200040b57600080fd5b85516001600160401b03808211156200042357600080fd5b6200043189838a0162000344565b965060208801519150808211156200044857600080fd5b6200045689838a0162000344565b955060408801519150808211156200046d57600080fd5b506200047c8882890162000344565b9350506200048d60608701620003d5565b91506200049d60808701620003d5565b90509295509295909350565b600060208284031215620004bc57600080fd5b81518015158114620004cd57600080fd5b9392505050565b600181811c90821680620004e957607f821691505b6020821081036200050a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200055e57600081815260208120601f850160051c81016020861015620005395750805b601f850160051c820191505b818110156200055a5782815560010162000545565b5050505b505050565b81516001600160401b038111156200057f576200057f62000308565b6200059781620005908454620004d4565b8462000510565b602080601f831160018114620005cf5760008415620005b65750858301515b600019600386901b1c1916600185901b1785556200055a565b600085815260208120601f198616915b828110156200060057888601518255948401946001909101908401620005df565b50858210156200061f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008251620006438184602087016200031e565b9190910192915050565b610de4806200065d6000396000f3fe6080604052600436106100eb5760003560e01c8063756af45f11610084578063a40bee5011610056578063a40bee5014610296578063b69ef8a8146102b8578063c66f2455146102cb578063c9230c5d146102e057005b8063756af45f14610218578063961974ba146102385780639c7597b214610258578063a33b12291461027857005b80633c872e5f116100bd5780633c872e5f1461019a5780633fe3347a146101bc5780634cfb9949146101d857806368cdafe6146101f857005b806301ffc9a7146100f4578063053b8b99146101295780630cd689f5146101485780631083f7611461016857005b366100f257005b005b34801561010057600080fd5b5061011461010f366004610a88565b6102f5565b60405190151581526020015b60405180910390f35b34801561013557600080fd5b506001545b604051908152602001610120565b34801561015457600080fd5b50610114610163366004610ace565b610347565b34801561017457600080fd5b506002546001600160a01b03165b6040516001600160a01b039091168152602001610120565b3480156101a657600080fd5b506101af6103d8565b6040516101209190610b3e565b3480156101c857600080fd5b5060016040516101209190610b7b565b3480156101e457600080fd5b5060055460ff166040516101209190610b99565b34801561020457600080fd5b50610114610213366004610ace565b61046a565b34801561022457600080fd5b506100f2610233366004610ba7565b6104b5565b34801561024457600080fd5b50610114610253366004610bc2565b6104fe565b34801561026457600080fd5b50610114610273366004610bfe565b610597565b34801561028457600080fd5b506000546001600160a01b0316610182565b3480156102a257600080fd5b506102ab6106c7565b6040516101209190610c1f565b3480156102c457600080fd5b504761013a565b3480156102d757600080fd5b5061013a6108fc565b3480156102ec57600080fd5b506101af61096e565b60006001600160e01b0319821663ce2ebc5760e01b148061032657506001600160e01b0319821663f20252a960e01b145b8061034157506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000610359630cd689f560e01b61097d565b60025460405163095ea7b360e01b81526001600160a01b038581166004830152602482018590529091169063095ea7b3906044015b6020604051808303816000875af11580156103ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d19190610ccd565b9392505050565b6060600480546103e790610cef565b80601f016020809104026020016040519081016040528092919081815260200182805461041390610cef565b80156104605780601f1061043557610100808354040283529160200191610460565b820191906000526020600020905b81548152906001019060200180831161044357829003601f168201915b5050505050905090565b600061047c633466d7f360e11b61097d565b60025460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018590529091169063a9059cbb9060440161038e565b6104c563756af45f60e01b61097d565b6040516001600160a01b038216904780156108fc02916000818181858888f193505050501580156104fa573d6000803e3d6000fd5b5050565b6000610510634b0cba5d60e11b61097d565b6002546040516323b872dd60e01b81526001600160a01b038681166004830152858116602483015260448201859052909116906323b872dd906064016020604051808303816000875af115801561056b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058f9190610ccd565b949350505050565b60008054600154604051625e0be360e41b815283926001600160a01b0316916305e0be30916105d691903090634e3acbd960e11b903390600401610d29565b6020604051808303816000875af11580156105f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106199190610d5a565b9050600081601581111561062f5761062f610b51565b14610658578060405163d8f7573d60e01b815260040161064f9190610d7b565b60405180910390fd5b6005805484919060ff1916600183600281111561067757610677610b51565b021790555030336001600160a01b03167f28f96d72c32e5791a0cb87cd75ccd24d30671b1044c06512ab88be89b053b8ca856040516106b69190610b99565b60405180910390a350600192915050565b61071060408051610100810182526000808252602082018190526060928201839052828201929092526080810182905260a081018290529060c082019081526020016000905290565b6040805161010081018252600154815260025491516370a0823160e01b8152306004820152909160208301916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561076e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107929190610d95565b8152602001600380546107a490610cef565b80601f01602080910402602001604051908101604052809291908181526020018280546107d090610cef565b801561081d5780601f106107f25761010080835404028352916020019161081d565b820191906000526020600020905b81548152906001019060200180831161080057829003601f168201915b505050505081526020016004805461083490610cef565b80601f016020809104026020016040519081016040528092919081815260200182805461086090610cef565b80156108ad5780601f10610882576101008083540402835291602001916108ad565b820191906000526020600020905b81548152906001019060200180831161089057829003601f168201915b50505091835250506002546001600160a01b0390811660208301526000541660408201526060016001815260055460209091019060ff1660028111156108f5576108f5610b51565b9052919050565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610945573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109699190610d95565b905090565b6060600380546103e790610cef565b600160055460ff16600281111561099657610996610b51565b146109d85760405162461bcd60e51b815260206004820152601260248201527114d85999535bd9194e8814995a9958dd195960721b604482015260640161064f565b60008054600154604051625e0be360e41b81526001600160a01b03909216916305e0be3091610a0f91309087903390600401610d29565b6020604051808303816000875af1158015610a2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a529190610d5a565b90506000816015811115610a6857610a68610b51565b146104fa578060405163d8f7573d60e01b815260040161064f9190610d7b565b600060208284031215610a9a57600080fd5b81356001600160e01b0319811681146103d157600080fd5b80356001600160a01b0381168114610ac957600080fd5b919050565b60008060408385031215610ae157600080fd5b610aea83610ab2565b946020939093013593505050565b6000815180845260005b81811015610b1e57602081850181015186830182015201610b02565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006103d16020830184610af8565b634e487b7160e01b600052602160045260246000fd5b60048110610b7757610b77610b51565b9052565b602081016103418284610b67565b60038110610b7757610b77610b51565b602081016103418284610b89565b600060208284031215610bb957600080fd5b6103d182610ab2565b600080600060608486031215610bd757600080fd5b610be084610ab2565b9250610bee60208501610ab2565b9150604084013590509250925092565b600060208284031215610c1057600080fd5b8135600381106103d157600080fd5b60208152815160208201526020820151604082015260006040830151610100806060850152610c52610120850183610af8565b91506060850151601f19858403016080860152610c6f8382610af8565b92505060018060a01b0360808601511660a085015260a0850151610c9e60c08601826001600160a01b03169052565b5060c0850151610cb160e0860182610b67565b5060e0850151610cc382860182610b89565b5090949350505050565b600060208284031215610cdf57600080fd5b815180151581146103d157600080fd5b600181811c90821680610d0357607f821691505b602082108103610d2357634e487b7160e01b600052602260045260246000fd5b50919050565b9384526001600160a01b0392831660208501526001600160e01b031991909116604084015216606082015260800190565b600060208284031215610d6c57600080fd5b8151601681106103d157600080fd5b6020810160168310610d8f57610d8f610b51565b91905290565b600060208284031215610da757600080fd5b505191905056fea2646970667358221220ecf480e777673d0239d1ec33e54ac4449ec2c3e500ad62c1b09786ece5ac637964736f6c63430008130033";

type ERC20AssetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20AssetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Asset__factory extends ContractFactory {
  constructor(...args: ERC20AssetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    assetName_: PromiseOrValue<string>,
    assetVersion_: PromiseOrValue<string>,
    profileName_: PromiseOrValue<string>,
    erc20Token_: PromiseOrValue<string>,
    acl_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20Asset> {
    return super.deploy(
      assetName_,
      assetVersion_,
      profileName_,
      erc20Token_,
      acl_,
      overrides || {}
    ) as Promise<ERC20Asset>;
  }
  override getDeployTransaction(
    assetName_: PromiseOrValue<string>,
    assetVersion_: PromiseOrValue<string>,
    profileName_: PromiseOrValue<string>,
    erc20Token_: PromiseOrValue<string>,
    acl_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      assetName_,
      assetVersion_,
      profileName_,
      erc20Token_,
      acl_,
      overrides || {}
    );
  }
  override attach(address: string): ERC20Asset {
    return super.attach(address) as ERC20Asset;
  }
  override connect(signer: Signer): ERC20Asset__factory {
    return super.connect(signer) as ERC20Asset__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20AssetInterface {
    return new utils.Interface(_abi) as ERC20AssetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Asset {
    return new Contract(address, _abi, signerOrProvider) as ERC20Asset;
  }
}
