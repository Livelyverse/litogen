/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC20,
  ERC20Interface,
} from "../../../../contracts/token/ERC20/ERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "string",
        name: "profileName_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimal_",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "enum IProfileACL.ProfileAuthorizationStatus",
        name: "",
        type: "uint8",
      },
    ],
    name: "ProfileACLActionForbidden",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "string",
        name: "oldProfile",
        type: "string",
      },
      {
        indexed: true,
        internalType: "string",
        name: "newProfile",
        type: "string",
      },
    ],
    name: "ProfileUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "acl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "profile",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "profileName",
        type: "string",
      },
    ],
    name: "setProfile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001366380380620013668339810160408190526200003491620001dd565b600080546001600160a01b031916331790558351600411156200008d5760405162461bcd60e51b815260206004820152600c60248201526b496e76616c6964204e616d6560a01b60448201526064015b60405180910390fd5b600383511015620000d25760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a590814de5b589bdb60921b604482015260640162000084565b6006620000e0858262000317565b506007620000ef848262000317565b506008805460ff191660ff831617905560056200010d838262000317565b5050505050620003e3565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200014057600080fd5b81516001600160401b03808211156200015d576200015d62000118565b604051601f8301601f19908116603f0116810190828211818310171562000188576200018862000118565b81604052838152602092508683858801011115620001a557600080fd5b600091505b83821015620001c95785820183015181830184015290820190620001aa565b600093810190920192909252949350505050565b60008060008060808587031215620001f457600080fd5b84516001600160401b03808211156200020c57600080fd5b6200021a888389016200012e565b955060208701519150808211156200023157600080fd5b6200023f888389016200012e565b945060408701519150808211156200025657600080fd5b5062000265878288016200012e565b925050606085015160ff811681146200027d57600080fd5b939692955090935050565b600181811c908216806200029d57607f821691505b602082108103620002be57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200031257600081815260208120601f850160051c81016020861015620002ed5750805b601f850160051c820191505b818110156200030e57828155600101620002f9565b5050505b505050565b81516001600160401b0381111562000333576200033362000118565b6200034b8162000344845462000288565b84620002c4565b602080601f8311600181146200038357600084156200036a5750858301515b600019600386901b1c1916600185901b1785556200030e565b600085815260208120601f198616915b82811015620003b45788860151825594840194600190910190840162000393565b5085821015620003d35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610f7380620003f36000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a2578063a9059cbb11610071578063a9059cbb14610236578063ab60636c14610249578063dd62ed3e14610251578063de2873591461028a578063f2fde38b1461029b57600080fd5b806370a08231146101d8578063715018a6146102015780638da5cb5b1461020957806395d89b411461022e57600080fd5b8063235b37b1116100de578063235b37b11461017257806323b872dd14610187578063313ce5671461019a57806354fd4d50146101af57600080fd5b806301ffc9a71461011057806306fdde0314610138578063095ea7b31461014d57806318160ddd14610160575b600080fd5b61012361011e366004610ac3565b6102ae565b60405190151581526020015b60405180910390f35b6101406102e5565b60405161012f9190610b18565b61012361015b366004610b67565b610377565b6003545b60405190815260200161012f565b610185610180366004610ba7565b61039f565b005b610123610195366004610c58565b610428565b60085460405160ff909116815260200161012f565b60408051808201909152600d81526c189718971896a634ba37b3b2b760991b6020820152610140565b6101646101e6366004610c94565b6001600160a01b031660009081526001602052604090205490565b61018561045c565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161012f565b610140610470565b610123610244366004610b67565b61047f565b61014061049d565b61016461025f366004610caf565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6004546001600160a01b0316610216565b6101856102a9366004610c94565b6104ac565b60006001600160e01b031982166336372b0760e01b14806102df57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600680546102f490610ce2565b80601f016020809104026020016040519081016040528092919081815260200182805461032090610ce2565b801561036d5780601f106103425761010080835404028352916020019161036d565b820191906000526020600020905b81548152906001019060200180831161035057829003601f168201915b5050505050905090565b600061038963095ea7b360e01b61050c565b33610395818585610659565b5060019392505050565b6103af63235b37b160e01b61050c565b806040516103bd9190610d1c565b604051809103902060056040516103d49190610d38565b60405180910390206103e33390565b6001600160a01b03167f6eb3a1c6a4675ba92d44e090515b1ceea358f26565d2854df0c99c3f5eaf985060405160405180910390a460056104248282610dfc565b5050565b600061043a6323b872dd60e01b61050c565b33610446858285610726565b6104518585856107ac565b506001949350505050565b6104646108df565b61046e6000610932565b565b6060600780546102f490610ce2565b600061049163a9059cbb60e01b61050c565b336103958185856107ac565b6060600580546102f490610ce2565b6001600160a01b0381166105005760405162461bcd60e51b815260206004820152601660248201527513dddb98589b194e881058d8d95cdcc811195b9a595960521b60448201526064015b60405180910390fd5b61050981610932565b50565b6004546001600160a01b03161561061d576004546040516000916001600160a01b0316906305e0be309061054590600590602001610d38565b6040516020818303038152906040528051906020012030856105643390565b6040516001600160e01b031960e087901b8116825260048201959095526001600160a01b039384166024820152919093166044820152911660648201526084016020604051808303816000875af11580156105c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e79190610ebc565b905060008160158111156105fd576105fd610edd565b14610424578060405163d8f7573d60e01b81526004016104f79190610ef3565b6001600160e01b0319811663235b37b160e01b148061064c57506001600160e01b0319811663f2fde38b60e01b145b15610509576105096108df565b6001600160a01b0383161580159061067957506001600160a01b03821615155b6106c55760405162461bcd60e51b815260206004820152601d60248201527f496e76616c6964204f776e65722f5370656e646572204164647265737300000060448201526064016104f7565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383811660009081526002602090815260408083209386168352929052205460001981146107a657818110156107995760405162461bcd60e51b8152602060048201526011602482015270496c6c6567616c20416c6c6f77616e636560781b60448201526064016104f7565b6107a68484848403610659565b50505050565b6001600160a01b038316158015906107cc57506001600160a01b03821615155b6108185760405162461bcd60e51b815260206004820152601760248201527f496e76616c69642046726f6d2f546f204164647265737300000000000000000060448201526064016104f7565b6001600160a01b038316600090815260016020526040902054818110156108725760405162461bcd60e51b815260206004820152600e60248201526d125b1b1959d85b08105b5bdd5b9d60921b60448201526064016104f7565b6001600160a01b0380851660008181526001602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906108d29086815260200190565b60405180910390a36107a6565b6000546001600160a01b0316331461046e5760405162461bcd60e51b815260206004820152601660248201527513dddb98589b194e881058d8d95cdcc811195b9a595960521b60448201526064016104f7565b61094263f2fde38b60e01b61050c565b6000546004546001600160a01b039182169116610968836001600160a01b03163b151590565b15610a42576040516301ffc9a760e01b815263047d056160e11b60048201526001600160a01b038416906301ffc9a790602401602060405180830381865afa1580156109b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109dc9190610f1b565b610a165760405162461bcd60e51b815260206004820152600b60248201526a125b1b1959d85b081050d360aa1b60448201526064016104f7565b600480546001600160a01b0385166001600160a01b031991821617909155600080549091169055610a6a565b600080546001600160a01b0385166001600160a01b0319918216179091556004805490911690555b6001600160a01b03808416908316610a825781610a84565b825b6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b505050565b600060208284031215610ad557600080fd5b81356001600160e01b031981168114610aed57600080fd5b9392505050565b60005b83811015610b0f578181015183820152602001610af7565b50506000910152565b6020815260008251806020840152610b37816040850160208701610af4565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114610b6257600080fd5b919050565b60008060408385031215610b7a57600080fd5b610b8383610b4b565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600060208284031215610bb957600080fd5b813567ffffffffffffffff80821115610bd157600080fd5b818401915084601f830112610be557600080fd5b813581811115610bf757610bf7610b91565b604051601f8201601f19908116603f01168101908382118183101715610c1f57610c1f610b91565b81604052828152876020848701011115610c3857600080fd5b826020860160208301376000928101602001929092525095945050505050565b600080600060608486031215610c6d57600080fd5b610c7684610b4b565b9250610c8460208501610b4b565b9150604084013590509250925092565b600060208284031215610ca657600080fd5b610aed82610b4b565b60008060408385031215610cc257600080fd5b610ccb83610b4b565b9150610cd960208401610b4b565b90509250929050565b600181811c90821680610cf657607f821691505b602082108103610d1657634e487b7160e01b600052602260045260246000fd5b50919050565b60008251610d2e818460208701610af4565b9190910192915050565b6000808354610d4681610ce2565b60018281168015610d5e5760018114610d7357610da2565b60ff1984168752821515830287019450610da2565b8760005260208060002060005b85811015610d995781548a820152908401908201610d80565b50505082870194505b50929695505050505050565b601f821115610abe57600081815260208120601f850160051c81016020861015610dd55750805b601f850160051c820191505b81811015610df457828155600101610de1565b505050505050565b815167ffffffffffffffff811115610e1657610e16610b91565b610e2a81610e248454610ce2565b84610dae565b602080601f831160018114610e5f5760008415610e475750858301515b600019600386901b1c1916600185901b178555610df4565b600085815260208120601f198616915b82811015610e8e57888601518255948401946001909101908401610e6f565b5085821015610eac5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215610ece57600080fd5b815160168110610aed57600080fd5b634e487b7160e01b600052602160045260246000fd5b6020810160168310610f1557634e487b7160e01b600052602160045260246000fd5b91905290565b600060208284031215610f2d57600080fd5b81518015158114610aed57600080fdfea2646970667358221220625a339730cb8fc171706c51a96118d99528132b713a1dce700ce7699c39942e64736f6c63430008130033";

type ERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20__factory extends ContractFactory {
  constructor(...args: ERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    profileName_: PromiseOrValue<string>,
    decimal_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20> {
    return super.deploy(
      name_,
      symbol_,
      profileName_,
      decimal_,
      overrides || {}
    ) as Promise<ERC20>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    profileName_: PromiseOrValue<string>,
    decimal_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      profileName_,
      decimal_,
      overrides || {}
    );
  }
  override attach(address: string): ERC20 {
    return super.attach(address) as ERC20;
  }
  override connect(signer: Signer): ERC20__factory {
    return super.connect(signer) as ERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20Interface {
    return new utils.Interface(_abi) as ERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC20 {
    return new Contract(address, _abi, signerOrProvider) as ERC20;
  }
}
