/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC20,
  ERC20Interface,
} from "../../../../contracts/token/ERC20/ERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "string",
        name: "version_",
        type: "string",
      },
      {
        internalType: "string",
        name: "profileName_",
        type: "string",
      },
      {
        internalType: "address",
        name: "acl_",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "decimal_",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "enum IProfileACL.ProfileAuthorizationStatus",
        name: "",
        type: "uint8",
      },
    ],
    name: "ProfileACLActionForbidden",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "acl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "profileId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000e6638038062000e668339810160408190526200003491620002f8565b6001600160a01b038216156200015e576001600160a01b0382163b6200008f5760405162461bcd60e51b815260206004820152600b60248201526a125b9d985b1a59081050d360aa1b60448201526064015b60405180910390fd5b6040516301ffc9a760e01b815263047d056160e11b60048201526001600160a01b038316906301ffc9a790602401602060405180830381865afa158015620000db573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001019190620003d5565b6200013d5760405162461bcd60e51b815260206004820152600b60248201526a125b1b1959d85b081050d360aa1b604482015260640162000086565b600480546001600160a01b0319166001600160a01b03841617905562000185565b600480546001600160a01b03191673f5a6fefbe1a23653fb8a72b1730ba447c73fb9931790555b60056200019387826200048f565b506006620001a286826200048f565b506007620001b185826200048f565b506008805460ff191660ff8316179055604051620001d49084906020016200055b565b6040516020818303038152906040528051906020012060038190555050505050505062000579565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200022f57818101518382015260200162000215565b50506000910152565b600082601f8301126200024a57600080fd5b81516001600160401b0380821115620002675762000267620001fc565b604051601f8301601f19908116603f01168101908282118183101715620002925762000292620001fc565b81604052838152866020858801011115620002ac57600080fd5b620002bf84602083016020890162000212565b9695505050505050565b80516001600160a01b0381168114620002e157600080fd5b919050565b805160ff81168114620002e157600080fd5b60008060008060008060c087890312156200031257600080fd5b86516001600160401b03808211156200032a57600080fd5b620003388a838b0162000238565b975060208901519150808211156200034f57600080fd5b6200035d8a838b0162000238565b965060408901519150808211156200037457600080fd5b620003828a838b0162000238565b955060608901519150808211156200039957600080fd5b50620003a889828a0162000238565b935050620003b960808801620002c9565b9150620003c960a08801620002e6565b90509295509295509295565b600060208284031215620003e857600080fd5b81518015158114620003f957600080fd5b9392505050565b600181811c908216806200041557607f821691505b6020821081036200043657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200048a57600081815260208120601f850160051c81016020861015620004655750805b601f850160051c820191505b81811015620004865782815560010162000471565b5050505b505050565b81516001600160401b03811115620004ab57620004ab620001fc565b620004c381620004bc845462000400565b846200043c565b602080601f831160018114620004fb5760008415620004e25750858301515b600019600386901b1c1916600185901b17855562000486565b600085815260208120601f198616915b828110156200052c578886015182559484019460019091019084016200050b565b50858210156200054b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082516200056f81846020870162000212565b9190910192915050565b6108dd80620005896000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063313ce5671161008c57806395d89b411161006657806395d89b4114610197578063a9059cbb1461019f578063dd62ed3e146101b2578063de287359146101eb57600080fd5b8063313ce5671461015157806354fd4d501461016657806370a082311461016e57600080fd5b806301ffc9a7146100d457806306fdde03146100fc57806308386eba14610111578063095ea7b31461012357806318160ddd1461013657806323b872dd1461013e575b600080fd5b6100e76100e23660046106bf565b610206565b60405190151581526020015b60405180910390f35b61010461023d565b6040516100f391906106f0565b6003545b6040519081526020016100f3565b6100e761013136600461075a565b6102cf565b600254610115565b6100e761014c366004610784565b6102f7565b60085460405160ff90911681526020016100f3565b61010461032b565b61011561017c3660046107c0565b6001600160a01b031660009081526020819052604090205490565b61010461033a565b6100e76101ad36600461075a565b610349565b6101156101c03660046107db565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6004546040516001600160a01b0390911681526020016100f3565b60006001600160e01b031982166336372b0760e01b148061023757506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606005805461024c9061080e565b80601f01602080910402602001604051908101604052809291908181526020018280546102789061080e565b80156102c55780601f1061029a576101008083540402835291602001916102c5565b820191906000526020600020905b8154815290600101906020018083116102a857829003601f168201915b5050505050905090565b60006102e163095ea7b360e01b610367565b336102ed818585610440565b5060019392505050565b60006103096323b872dd60e01b610367565b3361031585828561050d565b610320858585610593565b506001949350505050565b60606007805461024c9061080e565b60606006805461024c9061080e565b600061035b63a9059cbb60e01b610367565b336102ed818585610593565b6004805460035460408051625e0be360e41b8152938401919091523060248401526001600160e01b031984166044840152336064840152516000926001600160a01b03909216916305e0be30916084808301926020929190829003018187875af11580156103d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fd9190610848565b9050600081601581111561041357610413610869565b1461043c578060405163d8f7573d60e01b8152600401610433919061087f565b60405180910390fd5b5050565b6001600160a01b0383161580159061046057506001600160a01b03821615155b6104ac5760405162461bcd60e51b815260206004820152601d60248201527f496e76616c6964204f776e65722f5370656e64657220416464726573730000006044820152606401610433565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461058d57818110156105805760405162461bcd60e51b8152602060048201526011602482015270496c6c6567616c20416c6c6f77616e636560781b6044820152606401610433565b61058d8484848403610440565b50505050565b6001600160a01b038316158015906105b357506001600160a01b03821615155b6105ff5760405162461bcd60e51b815260206004820152601760248201527f496e76616c69642046726f6d2f546f20416464726573730000000000000000006044820152606401610433565b6001600160a01b038316600090815260208190526040902054818110156106595760405162461bcd60e51b815260206004820152600e60248201526d125b1b1959d85b08105b5bdd5b9d60921b6044820152606401610433565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361058d565b6000602082840312156106d157600080fd5b81356001600160e01b0319811681146106e957600080fd5b9392505050565b600060208083528351808285015260005b8181101561071d57858101830151858201604001528201610701565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461075557600080fd5b919050565b6000806040838503121561076d57600080fd5b6107768361073e565b946020939093013593505050565b60008060006060848603121561079957600080fd5b6107a28461073e565b92506107b06020850161073e565b9150604084013590509250925092565b6000602082840312156107d257600080fd5b6106e98261073e565b600080604083850312156107ee57600080fd5b6107f78361073e565b91506108056020840161073e565b90509250929050565b600181811c9082168061082257607f821691505b60208210810361084257634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561085a57600080fd5b8151601681106106e957600080fd5b634e487b7160e01b600052602160045260246000fd5b60208101601683106108a157634e487b7160e01b600052602160045260246000fd5b9190529056fea264697066735822122089523f366f66686a2b1b6dbe12376bb3f8777af67520b54d8bdcc166c7202ebf64736f6c63430008130033";

type ERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20__factory extends ContractFactory {
  constructor(...args: ERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    version_: PromiseOrValue<string>,
    profileName_: PromiseOrValue<string>,
    acl_: PromiseOrValue<string>,
    decimal_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20> {
    return super.deploy(
      name_,
      symbol_,
      version_,
      profileName_,
      acl_,
      decimal_,
      overrides || {}
    ) as Promise<ERC20>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    version_: PromiseOrValue<string>,
    profileName_: PromiseOrValue<string>,
    acl_: PromiseOrValue<string>,
    decimal_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      version_,
      profileName_,
      acl_,
      decimal_,
      overrides || {}
    );
  }
  override attach(address: string): ERC20 {
    return super.attach(address) as ERC20;
  }
  override connect(signer: Signer): ERC20__factory {
    return super.connect(signer) as ERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20Interface {
    return new utils.Interface(_abi) as ERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC20 {
    return new Contract(address, _abi, signerOrProvider) as ERC20;
  }
}
