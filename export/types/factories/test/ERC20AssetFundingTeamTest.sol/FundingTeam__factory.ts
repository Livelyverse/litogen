/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  FundingTeam,
  FundingTeamInterface,
} from "../../../test/ERC20AssetFundingTeamTest.sol/FundingTeam";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20Token_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "enum IProfileACL.ProfileAuthorizationStatus",
        name: "",
        type: "uint8",
      },
    ],
    name: "ProfileACLActionForbidden",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "string",
        name: "oldProfile",
        type: "string",
      },
      {
        indexed: true,
        internalType: "string",
        name: "newProfile",
        type: "string",
      },
    ],
    name: "AssetProfileUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum IAsset.AssetSafeModeStatus",
        name: "status",
        type: "uint8",
      },
    ],
    name: "AssetSafeModeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "assetAccessControl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetInfo",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "profile",
            type: "string",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "version",
            type: "string",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "accessControl",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "enum IAsset.AssetType",
            name: "atype",
            type: "uint8",
          },
          {
            internalType: "enum IAsset.AssetSafeModeStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct IAsset.AssetInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetProfile",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetSafeMode",
    outputs: [
      {
        internalType: "enum IAsset.AssetSafeModeStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "profileName",
        type: "string",
      },
    ],
    name: "assetSetProfile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IAsset.AssetSafeModeStatus",
        name: "status",
        type: "uint8",
      },
    ],
    name: "assetSetSafeMode",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "assetToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetType",
    outputs: [
      {
        internalType: "enum IAsset.AssetType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "assetVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct IERC20Extra.BatchTransferRequest[]",
        name: "request",
        type: "tuple[]",
      },
    ],
    name: "tokenBatchTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct IERC20Extra.BatchTransferFromRequest[]",
        name: "request",
        type: "tuple[]",
      },
    ],
    name: "tokenBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "tokenDecreaseAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "tokenIncreaseAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "source",
            type: "address",
          },
          {
            internalType: "address",
            name: "dest",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "claimAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct IERC20Lockable.LockTokenRequest[]",
        name: "lockRequests",
        type: "tuple[]",
      },
    ],
    name: "tokenLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "lockId",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "string",
            name: "reason",
            type: "string",
          },
        ],
        internalType: "struct IERC20Lockable.UnLockTokenRequest[]",
        name: "unlockRequests",
        type: "tuple[]",
      },
    ],
    name: "tokenUnlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recepient",
        type: "address",
      },
    ],
    name: "withdrawBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002471380380620024718339810160408190526200003491620002c9565b6040518060400160405280600b81526020016a66756e64696e675465616d60a81b8152506040518060400160405280600b81526020016a5465737450726f66696c6560a81b815250826200008d620002c560201b60201c565b600080546001600160a01b0319166001600160a01b0392909216919091179055825160041115620000f45760405162461bcd60e51b815260206004820152600c60248201526b496e76616c6964204e616d6560a01b60448201526064015b60405180910390fd5b6001600160a01b0381163b620001425760405162461bcd60e51b815260206004820152601260248201527124b73b30b634b21022a92199182a37b5b2b760711b6044820152606401620000eb565b6040516301ffc9a760e01b81526336372b0760e01b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa1580156200018e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001b49190620002fb565b1580156200023157506040516301ffc9a760e01b815263a0f7caf160e01b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa15801562000209573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200022f9190620002fb565b155b15620002755760405162461bcd60e51b815260206004820152601260248201527124b63632b3b0b61022a92199182a37b5b2b760711b6044820152606401620000eb565b6004620002838482620003c4565b50600380546001600160a01b0319166001600160a01b0383161790556005805460ff191660011790556002620002ba8382620003c4565b505050505062000490565b3390565b600060208284031215620002dc57600080fd5b81516001600160a01b0381168114620002f457600080fd5b9392505050565b6000602082840312156200030e57600080fd5b81518015158114620002f457600080fd5b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200034a57607f821691505b6020821081036200036b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003bf57600081815260208120601f850160051c810160208610156200039a5750805b601f850160051c820191505b81811015620003bb57828155600101620003a6565b5050505b505050565b81516001600160401b03811115620003e057620003e06200031f565b620003f881620003f1845462000335565b8462000371565b602080601f831160018114620004305760008415620004175750858301515b600019600386901b1c1916600185901b178555620003bb565b600085815260208120601f198616915b82811015620004615788860151825594840194600190910190840162000440565b5085821015620004805787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611fd180620004a06000396000f3fe6080604052600436106101b95760003560e01c806395d89b41116100eb578063b69ef8a81161008f578063dd62ed3e11610061578063dd62ed3e14610514578063e9dbebbd14610534578063f2fde38b14610554578063fc5240641461057457005b8063b69ef8a8146104ac578063c781bf17146104bf578063c9230c5d146104df578063cce6d801146104f457005b8063a33b1229116100c8578063a33b12291461042c578063a40bee501461044a578063a52e8e601461046c578063a9059cbb1461048c57005b806395d89b41146103d75780639c42c5ec146103ec5780639c7597b21461040c57005b80633fe3347a1161015d57806370a082311161012f57806370a0823114610364578063715018a614610384578063756af45f146103995780638da5cb5b146103b957005b80633fe3347a146102f35780634cfb99491461030f57806358e9abf21461032f5780635bc213ec1461034457005b806318160ddd1161019657806318160ddd1461024957806323b872dd1461026c578063313ce5671461028c5780633c872e5f146102b357005b806301ffc9a7146101c2578063095ea7b3146101f75780631083f7611461021757005b366101c057005b005b3480156101ce57600080fd5b506101e26101dd3660046114f4565b610594565b60405190151581526020015b60405180910390f35b34801561020357600080fd5b506101e261021236600461153a565b6105a5565b34801561022357600080fd5b506003546001600160a01b03165b6040516001600160a01b0390911681526020016101ee565b34801561025557600080fd5b5061025e610636565b6040519081526020016101ee565b34801561027857600080fd5b506101e2610287366004611564565b6106a9565b34801561029857600080fd5b506102a1610742565b60405160ff90911681526020016101ee565b3480156102bf57600080fd5b5060408051808201909152600e81526d3b191718971816a634ba37b3b2b760911b60208201525b6040516101ee91906115f0565b3480156102ff57600080fd5b5060016040516101ee919061162d565b34801561031b57600080fd5b5060055460ff166040516101ee919061164b565b34801561033b57600080fd5b506102e66107b0565b34801561035057600080fd5b506101c061035f3660046116c8565b610842565b34801561037057600080fd5b5061025e61037f366004611748565b6108cb565b34801561039057600080fd5b506101c061093a565b3480156103a557600080fd5b506101c06103b4366004611748565b61094e565b3480156103c557600080fd5b506000546001600160a01b0316610231565b3480156103e357600080fd5b506102e6610993565b3480156103f857600080fd5b506101c0610407366004611763565b610a05565b34801561041857600080fd5b506101e26104273660046117d8565b610a7d565b34801561043857600080fd5b506001546001600160a01b0316610231565b34801561045657600080fd5b5061045f610bdd565b6040516101ee91906117f9565b34801561047857600080fd5b506101c061048736600461153a565b610dce565b34801561049857600080fd5b506101e26104a736600461153a565b610e5b565b3480156104b857600080fd5b504761025e565b3480156104cb57600080fd5b506101c06104da3660046118ca565b610ea6565b3480156104eb57600080fd5b506102e6610f37565b34801561050057600080fd5b506101c061050f36600461192d565b610f46565b34801561052057600080fd5b5061025e61052f366004611990565b611017565b34801561054057600080fd5b506101c061054f3660046119c3565b61108e565b34801561056057600080fd5b506101c061056f366004611748565b6110d0565b34801561058057600080fd5b506101c061058f36600461153a565b61112b565b600061059f82611174565b92915050565b60006105b763095ea7b360e01b611199565b60035460405163095ea7b360e01b81526001600160a01b038581166004830152602482018590529091169063095ea7b3906044015b6020604051808303816000875af115801561060b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062f9190611a26565b9392505050565b600354604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa158015610680573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a49190611a48565b905090565b60006106bb6323b872dd60e01b611199565b6003546040516323b872dd60e01b81526001600160a01b038681166004830152858116602483015260448201859052909116906323b872dd906064016020604051808303816000875af1158015610716573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073a9190611a26565b949350505050565b6003546040805163313ce56760e01b815290516000926001600160a01b03169163313ce5679160048083019260209291908290030181865afa15801561078c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a49190611a61565b6060600280546107bf90611a84565b80601f01602080910402602001604051908101604052809291908181526020018280546107eb90611a84565b80156108385780601f1061080d57610100808354040283529160200191610838565b820191906000526020600020905b81548152906001019060200180831161081b57829003601f168201915b5050505050905090565b6108526316f084fb60e21b611199565b806040516108609190611abe565b604051809103902060026040516108779190611ada565b60405180910390206108863390565b6001600160a01b03167fe6fa79c1f2ea3c82570c2be794a3d87196e039c8b4a9aa1bb4cd1130649ec82a60405160405180910390a460026108c78282611b96565b5050565b6003546040516370a0823160e01b81526001600160a01b03838116600483015260009216906370a0823190602401602060405180830381865afa158015610916573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059f9190611a48565b6109426112a5565b61094c60006112f8565b565b61095e63756af45f60e01b611199565b6040516001600160a01b038216904780156108fc02916000818181858888f193505050501580156108c7573d6000803e3d6000fd5b600354604080516395d89b4160e01b815290516060926001600160a01b0316916395d89b419160048083019260009291908290030181865afa1580156109dd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106a49190810190611c56565b610a15632710b17b60e21b611199565b60035460405163038d251d60e31b81526001600160a01b0390911690631c6928e890610a479085908590600401611ccd565b600060405180830381600087803b158015610a6157600080fd5b505af1158015610a75573d6000803e3d6000fd5b505050505050565b60015460405160009182916001600160a01b03909116906305e0be3090610aa990600290602001611ada565b60408051808303601f190181529082905280516020909101206001600160e01b031960e084901b168252610aec913090634e3acbd960e11b903390600401611d39565b6020604051808303816000875af1158015610b0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2f9190611d6a565b90506000816015811115610b4557610b45611603565b14610b6e578060405163d8f7573d60e01b8152600401610b659190611d8b565b60405180910390fd5b6005805484919060ff19166001836002811115610b8d57610b8d611603565b021790555030336001600160a01b03167f28f96d72c32e5791a0cb87cd75ccd24d30671b1044c06512ab88be89b053b8ca85604051610bcc919061164b565b60405180910390a350600192915050565b610c25604080516101008101825260608082526020820181905291810182905260009181018290526080810182905260a081018290529060c082019081526020016000905290565b60405180610100016040528060028054610c3e90611a84565b80601f0160208091040260200160405190810160405280929190818152602001828054610c6a90611a84565b8015610cb75780601f10610c8c57610100808354040283529160200191610cb7565b820191906000526020600020905b815481529060010190602001808311610c9a57829003601f168201915b5050505050815260200160048054610cce90611a84565b80601f0160208091040260200160405190810160405280929190818152602001828054610cfa90611a84565b8015610d475780601f10610d1c57610100808354040283529160200191610d47565b820191906000526020600020905b815481529060010190602001808311610d2a57829003601f168201915b5050509183525050604080518082018252600e81526d3b191718971816a634ba37b3b2b760911b6020808301919091528301526003546001600160a01b03908116918301919091526001805482166060840152600054909116608083015260a082015260055460c09091019060ff166002811115610dc757610dc7611603565b9052919050565b610dde630529747360e51b611199565b60035460405163a457c2d760e01b81526001600160a01b038481166004830152602482018490529091169063a457c2d7906044015b6020604051808303816000875af1158015610e32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e569190611a48565b505050565b6000610e6d63a9059cbb60e01b611199565b60035460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018590529091169063a9059cbb906044016105ec565b6001546001600160a01b0316610ef55760405162461bcd60e51b8152602060048201526014602482015273155b9b1bd8dac8139bdd0814dd5c1c1bdc9d195960621b6044820152606401610b65565b610f0563cce6d80160e01b611199565b600354604051634a9ff4a160e11b81526001600160a01b039091169063953fe94290610a479085908590600401611dce565b6060600480546107bf90611a84565b610f5663cce6d80160e01b611199565b60005b81811015610fe45730838383818110610f7457610f74611eab565b610f8a9260206080909202019081019150611748565b6001600160a01b031614610fd25760405162461bcd60e51b815260206004820152600f60248201526e496c6c6567616c204164647265737360881b6044820152606401610b65565b80610fdc81611ec1565b915050610f59565b506003546040516374bb18e760e01b81526001600160a01b03909116906374bb18e790610a479085908590600401611ee8565b600354604051636eb1769f60e11b81526001600160a01b0384811660048301528381166024830152600092169063dd62ed3e90604401602060405180830381865afa15801561106a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062f9190611a48565b61109e63e9dbebbd60e01b611199565b600354604051631f54aa5560e31b81526001600160a01b039091169063faa552a890610a479085908590600401611f51565b6001600160a01b03811661111f5760405162461bcd60e51b815260206004820152601660248201527513dddb98589b194e881058d8d95cdcc811195b9a595960521b6044820152606401610b65565b611128816112f8565b50565b61113b633f14901960e21b611199565b600354604051633950935160e01b81526001600160a01b0384811660048301526024820184905290911690633950935190604401610e13565b60006001600160e01b03198216636a6756a760e01b148061059f575061059f82611484565b6001546001600160a01b031615611289576001546040516000916001600160a01b0316906305e0be30906111d290600290602001611ada565b6040516020818303038152906040528051906020012030856111f13390565b6040518563ffffffff1660e01b81526004016112109493929190611d39565b6020604051808303816000875af115801561122f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112539190611d6a565b9050600081601581111561126957611269611603565b146108c7578060405163d8f7573d60e01b8152600401610b659190611d8b565b630d021c7560e01b6001600160e01b0319821601611128576111285b6000546001600160a01b0316331461094c5760405162461bcd60e51b815260206004820152601660248201527513dddb98589b194e881058d8d95cdcc811195b9a595960521b6044820152606401610b65565b61130863f2fde38b60e01b611199565b6000546001546001600160a01b03918216911661132e836001600160a01b03163b151590565b15611408576040516301ffc9a760e01b815263047d056160e11b60048201526001600160a01b038416906301ffc9a790602401602060405180830381865afa15801561137e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a29190611a26565b6113dc5760405162461bcd60e51b815260206004820152600b60248201526a125b1b1959d85b081050d360aa1b6044820152606401610b65565b600180546001600160a01b0385166001600160a01b031991821617909155600080549091169055611430565b600080546001600160a01b0385166001600160a01b0319918216179091556001805490911690555b6001600160a01b03808416908316611448578161144a565b825b6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b60006001600160e01b03198216632ce5e05560e01b148061059f575061059f8260006001600160e01b03198216630e51ab8560e01b14806114d557506001600160e01b031982166392d3552160e01b145b8061059f57506301ffc9a760e01b6001600160e01b031983161461059f565b60006020828403121561150657600080fd5b81356001600160e01b03198116811461062f57600080fd5b80356001600160a01b038116811461153557600080fd5b919050565b6000806040838503121561154d57600080fd5b6115568361151e565b946020939093013593505050565b60008060006060848603121561157957600080fd5b6115828461151e565b92506115906020850161151e565b9150604084013590509250925092565b60005b838110156115bb5781810151838201526020016115a3565b50506000910152565b600081518084526115dc8160208601602086016115a0565b601f01601f19169290920160200192915050565b60208152600061062f60208301846115c4565b634e487b7160e01b600052602160045260246000fd5b6004811061162957611629611603565b9052565b6020810161059f8284611619565b6003811061162957611629611603565b6020810161059f828461163b565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561169857611698611659565b604052919050565b600067ffffffffffffffff8211156116ba576116ba611659565b50601f01601f191660200190565b6000602082840312156116da57600080fd5b813567ffffffffffffffff8111156116f157600080fd5b8201601f8101841361170257600080fd5b8035611715611710826116a0565b61166f565b81815285602083850101111561172a57600080fd5b81602084016020830137600091810160200191909152949350505050565b60006020828403121561175a57600080fd5b61062f8261151e565b6000806020838503121561177657600080fd5b823567ffffffffffffffff8082111561178e57600080fd5b818501915085601f8301126117a257600080fd5b8135818111156117b157600080fd5b8660206060830285010111156117c657600080fd5b60209290920196919550909350505050565b6000602082840312156117ea57600080fd5b81356003811061062f57600080fd5b60208152600082516101008060208501526118186101208501836115c4565b91506020850151601f198086850301604087015261183684836115c4565b935060408701519150808685030160608701525061185483826115c4565b925050606085015161187160808601826001600160a01b03169052565b5060808501516001600160a01b03811660a08601525060a08501516001600160a01b03811660c08601525060c08501516118ae60e0860182611619565b5060e08501516118c08286018261163b565b5090949350505050565b600080602083850312156118dd57600080fd5b823567ffffffffffffffff808211156118f557600080fd5b818501915085601f83011261190957600080fd5b81358181111561191857600080fd5b8660208260051b85010111156117c657600080fd5b6000806020838503121561194057600080fd5b823567ffffffffffffffff8082111561195857600080fd5b818501915085601f83011261196c57600080fd5b81358181111561197b57600080fd5b8660208260071b85010111156117c657600080fd5b600080604083850312156119a357600080fd5b6119ac8361151e565b91506119ba6020840161151e565b90509250929050565b600080602083850312156119d657600080fd5b823567ffffffffffffffff808211156119ee57600080fd5b818501915085601f830112611a0257600080fd5b813581811115611a1157600080fd5b8660208260061b85010111156117c657600080fd5b600060208284031215611a3857600080fd5b8151801515811461062f57600080fd5b600060208284031215611a5a57600080fd5b5051919050565b600060208284031215611a7357600080fd5b815160ff8116811461062f57600080fd5b600181811c90821680611a9857607f821691505b602082108103611ab857634e487b7160e01b600052602260045260246000fd5b50919050565b60008251611ad08184602087016115a0565b9190910192915050565b6000808354611ae881611a84565b60018281168015611b005760018114611b1557611b44565b60ff1984168752821515830287019450611b44565b8760005260208060002060005b85811015611b3b5781548a820152908401908201611b22565b50505082870194505b50929695505050505050565b601f821115610e5657600081815260208120601f850160051c81016020861015611b775750805b601f850160051c820191505b81811015610a7557828155600101611b83565b815167ffffffffffffffff811115611bb057611bb0611659565b611bc481611bbe8454611a84565b84611b50565b602080601f831160018114611bf95760008415611be15750858301515b600019600386901b1c1916600185901b178555610a75565b600085815260208120601f198616915b82811015611c2857888601518255948401946001909101908401611c09565b5085821015611c465787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215611c6857600080fd5b815167ffffffffffffffff811115611c7f57600080fd5b8201601f81018413611c9057600080fd5b8051611c9e611710826116a0565b818152856020838501011115611cb357600080fd5b611cc48260208301602086016115a0565b95945050505050565b6020808252818101839052600090604080840186845b87811015611d2c576001600160a01b0380611cfd8461151e565b16845280611d0c87850161151e565b168487015250818401358484015260609283019290910190600101611ce3565b5090979650505050505050565b9384526001600160a01b0392831660208501526001600160e01b031991909116604084015216606082015260800190565b600060208284031215611d7c57600080fd5b81516016811061062f57600080fd5b6020810160168310611d9f57611d9f611603565b91905290565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60208082528181018390526000906040808401600586901b8501820187855b88811015611e9d57878303603f190184528135368b9003605e19018112611e1357600080fd5b8a018035845260606001600160a01b03611e2e89840161151e565b168886015286820135601e19833603018112611e4957600080fd5b90910187810191903567ffffffffffffffff811115611e6757600080fd5b803603831315611e7657600080fd5b8188870152611e888287018285611da5565b96890196955050509186019150600101611ded565b509098975050505050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201611ee157634e487b7160e01b600052601160045260246000fd5b5060010190565b6020808252818101839052600090604080840186845b87811015611d2c576001600160a01b0380611f188461151e565b16845280611f2787850161151e565b16848701525081840135848401526060808301359084015260809283019290910190600101611efe565b6020808252818101839052600090604080840186845b87811015611d2c576001600160a01b03611f808361151e565b16835281850135858401529183019190830190600101611f6756fea264697066735822122052ab4762ba7de8f8cab221d02bf2cad893cb89787ea83b33708f54fca15cb8ab64736f6c63430008130033";

type FundingTeamConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FundingTeamConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FundingTeam__factory extends ContractFactory {
  constructor(...args: FundingTeamConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    erc20Token_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FundingTeam> {
    return super.deploy(erc20Token_, overrides || {}) as Promise<FundingTeam>;
  }
  override getDeployTransaction(
    erc20Token_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(erc20Token_, overrides || {});
  }
  override attach(address: string): FundingTeam {
    return super.attach(address) as FundingTeam;
  }
  override connect(signer: Signer): FundingTeam__factory {
    return super.connect(signer) as FundingTeam__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FundingTeamInterface {
    return new utils.Interface(_abi) as FundingTeamInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FundingTeam {
    return new Contract(address, _abi, signerOrProvider) as FundingTeam;
  }
}
