/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  FundingTeam,
  FundingTeamInterface,
} from "../../../test/ERC20AssetFundingTeamTest.sol/FundingTeam";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20Token_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "enum IProfileACL.ProfileAuthorizationStatus",
        name: "",
        type: "uint8",
      },
    ],
    name: "ProfileACLActionForbidden",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "string",
        name: "oldProfile",
        type: "string",
      },
      {
        indexed: true,
        internalType: "string",
        name: "newProfile",
        type: "string",
      },
    ],
    name: "AssetProfileUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum IAsset.AssetSafeModeStatus",
        name: "status",
        type: "uint8",
      },
    ],
    name: "AssetSafeModeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "assetAccessControl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetInfo",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "profile",
            type: "string",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "version",
            type: "string",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "accessControl",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "enum IAsset.AssetType",
            name: "atype",
            type: "uint8",
          },
          {
            internalType: "enum IAsset.AssetSafeModeStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct IAsset.AssetInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetProfile",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetSafeMode",
    outputs: [
      {
        internalType: "enum IAsset.AssetSafeModeStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "profileName",
        type: "string",
      },
    ],
    name: "assetSetProfile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IAsset.AssetSafeModeStatus",
        name: "status",
        type: "uint8",
      },
    ],
    name: "assetSetSafeMode",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "assetToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetType",
    outputs: [
      {
        internalType: "enum IAsset.AssetType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "assetVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "tokenApprove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct IERC20Extra.BatchTransferRequest[]",
        name: "request",
        type: "tuple[]",
      },
    ],
    name: "tokenBatchTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct IERC20Extra.BatchTransferFromRequest[]",
        name: "request",
        type: "tuple[]",
      },
    ],
    name: "tokenBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "tokenDecreaseAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "tokenIncreaseAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "source",
            type: "address",
          },
          {
            internalType: "address",
            name: "dest",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "claimAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct IERC20Lockable.LockTokenRequest[]",
        name: "lockRequests",
        type: "tuple[]",
      },
    ],
    name: "tokenLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "tokenTransfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "tokenTransferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "lockId",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "string",
            name: "reason",
            type: "string",
          },
        ],
        internalType: "struct IERC20Lockable.UnLockTokenRequest[]",
        name: "unlockRequests",
        type: "tuple[]",
      },
    ],
    name: "tokenUnlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recepient",
        type: "address",
      },
    ],
    name: "withdrawBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620020f3380380620020f38339810160408190526200003491620002c9565b6040518060400160405280600b81526020016a66756e64696e675465616d60a81b8152506040518060400160405280600b81526020016a5465737450726f66696c6560a81b815250826200008d620002c560201b60201c565b600080546001600160a01b0319166001600160a01b0392909216919091179055825160041115620000f45760405162461bcd60e51b815260206004820152600c60248201526b496e76616c6964204e616d6560a01b60448201526064015b60405180910390fd5b6001600160a01b0381163b620001425760405162461bcd60e51b815260206004820152601260248201527124b73b30b634b21022a92199182a37b5b2b760711b6044820152606401620000eb565b6040516301ffc9a760e01b81526336372b0760e01b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa1580156200018e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001b49190620002fb565b1580156200023157506040516301ffc9a760e01b815263a0f7caf160e01b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa15801562000209573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200022f9190620002fb565b155b15620002755760405162461bcd60e51b815260206004820152601260248201527124b63632b3b0b61022a92199182a37b5b2b760711b6044820152606401620000eb565b6004620002838482620003c4565b50600380546001600160a01b0319166001600160a01b0383161790556005805460ff191660011790556002620002ba8382620003c4565b505050505062000490565b3390565b600060208284031215620002dc57600080fd5b81516001600160a01b0381168114620002f457600080fd5b9392505050565b6000602082840312156200030e57600080fd5b81518015158114620002f457600080fd5b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200034a57607f821691505b6020821081036200036b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003bf57600081815260208120601f850160051c810160208610156200039a5750805b601f850160051c820191505b81811015620003bb57828155600101620003a6565b5050505b505050565b81516001600160401b03811115620003e057620003e06200031f565b620003f881620003f1845462000335565b8462000371565b602080601f831160018114620004305760008415620004175750858301515b600019600386901b1c1916600185901b178555620003bb565b600085815260208120601f198616915b82811015620004615788860151825594840194600190910190840162000440565b5085821015620004805787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611c5380620004a06000396000f3fe6080604052600436106101735760003560e01c80639c42c5ec116100c8578063b69ef8a811610084578063cce6d80111610061578063cce6d80114610452578063e9dbebbd14610472578063f2fde38b14610492578063fc524064146104b257005b8063b69ef8a81461040a578063c781bf171461041d578063c9230c5d1461043d57005b80639c42c5ec146103475780639c7597b2146103675780639e1a4d1914610387578063a33b1229146103aa578063a40bee50146103c8578063a52e8e60146103ea57005b806358e9abf21161012f578063715018a61161010c578063715018a6146102d4578063756af45f146102e95780638da5cb5b14610309578063961974ba1461032757005b806358e9abf21461027f5780635bc213ec1461029457806368cdafe6146102b457005b806301ffc9a71461017c5780630cd689f5146101b15780631083f761146101d15780633c872e5f146102035780633fe3347a146102435780634cfb99491461025f57005b3661017a57005b005b34801561018857600080fd5b5061019c61019736600461126b565b6104d2565b60405190151581526020015b60405180910390f35b3480156101bd57600080fd5b5061019c6101cc3660046112b1565b6104e3565b3480156101dd57600080fd5b506003546001600160a01b03165b6040516001600160a01b0390911681526020016101a8565b34801561020f57600080fd5b5060408051808201909152600e81526d3b191719171816a634ba37b3b2b760911b60208201525b6040516101a8919061132b565b34801561024f57600080fd5b5060016040516101a89190611368565b34801561026b57600080fd5b5060055460ff166040516101a89190611386565b34801561028b57600080fd5b50610236610574565b3480156102a057600080fd5b5061017a6102af3660046113aa565b610606565b3480156102c057600080fd5b5061019c6102cf3660046112b1565b61068f565b3480156102e057600080fd5b5061017a6106da565b3480156102f557600080fd5b5061017a61030436600461145b565b6106ee565b34801561031557600080fd5b506000546001600160a01b03166101eb565b34801561033357600080fd5b5061019c610342366004611476565b610733565b34801561035357600080fd5b5061017a6103623660046114b2565b6107cc565b34801561037357600080fd5b5061019c610382366004611527565b610844565b34801561039357600080fd5b5061039c6109a4565b6040519081526020016101a8565b3480156103b657600080fd5b506001546001600160a01b03166101eb565b3480156103d457600080fd5b506103dd610a16565b6040516101a89190611548565b3480156103f657600080fd5b5061017a6104053660046112b1565b610c07565b34801561041657600080fd5b504761039c565b34801561042957600080fd5b5061017a610438366004611619565b610c94565b34801561044957600080fd5b50610236610d25565b34801561045e57600080fd5b5061017a61046d36600461167c565b610d34565b34801561047e57600080fd5b5061017a61048d3660046116df565b610e05565b34801561049e57600080fd5b5061017a6104ad36600461145b565b610e47565b3480156104be57600080fd5b5061017a6104cd3660046112b1565b610ea2565b60006104dd82610eeb565b92915050565b60006104f5630cd689f560e01b610f10565b60035460405163095ea7b360e01b81526001600160a01b038581166004830152602482018590529091169063095ea7b3906044015b6020604051808303816000875af1158015610549573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056d9190611742565b9392505050565b60606002805461058390611764565b80601f01602080910402602001604051908101604052809291908181526020018280546105af90611764565b80156105fc5780601f106105d1576101008083540402835291602001916105fc565b820191906000526020600020905b8154815290600101906020018083116105df57829003601f168201915b5050505050905090565b6106166316f084fb60e21b610f10565b80604051610624919061179e565b6040518091039020600260405161063b91906117ba565b604051809103902061064a3390565b6001600160a01b03167fe6fa79c1f2ea3c82570c2be794a3d87196e039c8b4a9aa1bb4cd1130649ec82a60405160405180910390a4600261068b8282611876565b5050565b60006106a1633466d7f360e11b610f10565b60035460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018590529091169063a9059cbb9060440161052a565b6106e261101c565b6106ec600061106f565b565b6106fe63756af45f60e01b610f10565b6040516001600160a01b038216904780156108fc02916000818181858888f1935050505015801561068b573d6000803e3d6000fd5b6000610745634b0cba5d60e11b610f10565b6003546040516323b872dd60e01b81526001600160a01b038681166004830152858116602483015260448201859052909116906323b872dd906064016020604051808303816000875af11580156107a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c49190611742565b949350505050565b6107dc632710b17b60e21b610f10565b60035460405163038d251d60e31b81526001600160a01b0390911690631c6928e89061080e9085908590600401611936565b600060405180830381600087803b15801561082857600080fd5b505af115801561083c573d6000803e3d6000fd5b505050505050565b60015460405160009182916001600160a01b03909116906305e0be3090610870906002906020016117ba565b60408051808303601f190181529082905280516020909101206001600160e01b031960e084901b1682526108b3913090634e3acbd960e11b9033906004016119a2565b6020604051808303816000875af11580156108d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f691906119d3565b9050600081601581111561090c5761090c61133e565b14610935578060405163d8f7573d60e01b815260040161092c91906119f4565b60405180910390fd5b6005805484919060ff191660018360028111156109545761095461133e565b021790555030336001600160a01b03167f28f96d72c32e5791a0cb87cd75ccd24d30671b1044c06512ab88be89b053b8ca856040516109939190611386565b60405180910390a350600192915050565b6003546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156109ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a119190611a0e565b905090565b610a5e604080516101008101825260608082526020820181905291810182905260009181018290526080810182905260a081018290529060c082019081526020016000905290565b60405180610100016040528060028054610a7790611764565b80601f0160208091040260200160405190810160405280929190818152602001828054610aa390611764565b8015610af05780601f10610ac557610100808354040283529160200191610af0565b820191906000526020600020905b815481529060010190602001808311610ad357829003601f168201915b5050505050815260200160048054610b0790611764565b80601f0160208091040260200160405190810160405280929190818152602001828054610b3390611764565b8015610b805780601f10610b5557610100808354040283529160200191610b80565b820191906000526020600020905b815481529060010190602001808311610b6357829003601f168201915b5050509183525050604080518082018252600e81526d3b191719171816a634ba37b3b2b760911b6020808301919091528301526003546001600160a01b03908116918301919091526001805482166060840152600054909116608083015260a082015260055460c09091019060ff166002811115610c0057610c0061133e565b9052919050565b610c17630529747360e51b610f10565b60035460405163a457c2d760e01b81526001600160a01b038481166004830152602482018490529091169063a457c2d7906044015b6020604051808303816000875af1158015610c6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8f9190611a0e565b505050565b6001546001600160a01b0316610ce35760405162461bcd60e51b8152602060048201526014602482015273155b9b1bd8dac8139bdd0814dd5c1c1bdc9d195960621b604482015260640161092c565b610cf363cce6d80160e01b610f10565b600354604051634a9ff4a160e11b81526001600160a01b039091169063953fe9429061080e9085908590600401611a50565b60606004805461058390611764565b610d4463cce6d80160e01b610f10565b60005b81811015610dd25730838383818110610d6257610d62611b2d565b610d78926020608090920201908101915061145b565b6001600160a01b031614610dc05760405162461bcd60e51b815260206004820152600f60248201526e496c6c6567616c204164647265737360881b604482015260640161092c565b80610dca81611b43565b915050610d47565b506003546040516374bb18e760e01b81526001600160a01b03909116906374bb18e79061080e9085908590600401611b6a565b610e1563e9dbebbd60e01b610f10565b600354604051631f54aa5560e31b81526001600160a01b039091169063faa552a89061080e9085908590600401611bd3565b6001600160a01b038116610e965760405162461bcd60e51b815260206004820152601660248201527513dddb98589b194e881058d8d95cdcc811195b9a595960521b604482015260640161092c565b610e9f8161106f565b50565b610eb2633f14901960e21b610f10565b600354604051633950935160e01b81526001600160a01b0384811660048301526024820184905290911690633950935190604401610c4c565b60006001600160e01b03198216636a6756a760e01b14806104dd57506104dd826111fb565b6001546001600160a01b031615611000576001546040516000916001600160a01b0316906305e0be3090610f49906002906020016117ba565b604051602081830303815290604052805190602001203085610f683390565b6040518563ffffffff1660e01b8152600401610f8794939291906119a2565b6020604051808303816000875af1158015610fa6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fca91906119d3565b90506000816015811115610fe057610fe061133e565b1461068b578060405163d8f7573d60e01b815260040161092c91906119f4565b630d021c7560e01b6001600160e01b0319821601610e9f57610e9f5b6000546001600160a01b031633146106ec5760405162461bcd60e51b815260206004820152601660248201527513dddb98589b194e881058d8d95cdcc811195b9a595960521b604482015260640161092c565b61107f63f2fde38b60e01b610f10565b6000546001546001600160a01b0391821691166110a5836001600160a01b03163b151590565b1561117f576040516301ffc9a760e01b815263047d056160e11b60048201526001600160a01b038416906301ffc9a790602401602060405180830381865afa1580156110f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111199190611742565b6111535760405162461bcd60e51b815260206004820152600b60248201526a125b1b1959d85b081050d360aa1b604482015260640161092c565b600180546001600160a01b0385166001600160a01b0319918216179091556000805490911690556111a7565b600080546001600160a01b0385166001600160a01b0319918216179091556001805490911690555b6001600160a01b038084169083166111bf57816111c1565b825b6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b60006001600160e01b03198216632ce5e05560e01b14806104dd57506104dd8260006001600160e01b03198216630e51ab8560e01b148061124c57506001600160e01b031982166306c181fb60e41b145b806104dd57506301ffc9a760e01b6001600160e01b03198316146104dd565b60006020828403121561127d57600080fd5b81356001600160e01b03198116811461056d57600080fd5b80356001600160a01b03811681146112ac57600080fd5b919050565b600080604083850312156112c457600080fd5b6112cd83611295565b946020939093013593505050565b60005b838110156112f65781810151838201526020016112de565b50506000910152565b600081518084526113178160208601602086016112db565b601f01601f19169290920160200192915050565b60208152600061056d60208301846112ff565b634e487b7160e01b600052602160045260246000fd5b600481106113645761136461133e565b9052565b602081016104dd8284611354565b600381106113645761136461133e565b602081016104dd8284611376565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156113bc57600080fd5b813567ffffffffffffffff808211156113d457600080fd5b818401915084601f8301126113e857600080fd5b8135818111156113fa576113fa611394565b604051601f8201601f19908116603f0116810190838211818310171561142257611422611394565b8160405282815287602084870101111561143b57600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561146d57600080fd5b61056d82611295565b60008060006060848603121561148b57600080fd5b61149484611295565b92506114a260208501611295565b9150604084013590509250925092565b600080602083850312156114c557600080fd5b823567ffffffffffffffff808211156114dd57600080fd5b818501915085601f8301126114f157600080fd5b81358181111561150057600080fd5b86602060608302850101111561151557600080fd5b60209290920196919550909350505050565b60006020828403121561153957600080fd5b81356003811061056d57600080fd5b60208152600082516101008060208501526115676101208501836112ff565b91506020850151601f198086850301604087015261158584836112ff565b93506040870151915080868503016060870152506115a383826112ff565b92505060608501516115c060808601826001600160a01b03169052565b5060808501516001600160a01b03811660a08601525060a08501516001600160a01b03811660c08601525060c08501516115fd60e0860182611354565b5060e085015161160f82860182611376565b5090949350505050565b6000806020838503121561162c57600080fd5b823567ffffffffffffffff8082111561164457600080fd5b818501915085601f83011261165857600080fd5b81358181111561166757600080fd5b8660208260051b850101111561151557600080fd5b6000806020838503121561168f57600080fd5b823567ffffffffffffffff808211156116a757600080fd5b818501915085601f8301126116bb57600080fd5b8135818111156116ca57600080fd5b8660208260071b850101111561151557600080fd5b600080602083850312156116f257600080fd5b823567ffffffffffffffff8082111561170a57600080fd5b818501915085601f83011261171e57600080fd5b81358181111561172d57600080fd5b8660208260061b850101111561151557600080fd5b60006020828403121561175457600080fd5b8151801515811461056d57600080fd5b600181811c9082168061177857607f821691505b60208210810361179857634e487b7160e01b600052602260045260246000fd5b50919050565b600082516117b08184602087016112db565b9190910192915050565b60008083546117c881611764565b600182811680156117e057600181146117f557611824565b60ff1984168752821515830287019450611824565b8760005260208060002060005b8581101561181b5781548a820152908401908201611802565b50505082870194505b50929695505050505050565b601f821115610c8f57600081815260208120601f850160051c810160208610156118575750805b601f850160051c820191505b8181101561083c57828155600101611863565b815167ffffffffffffffff81111561189057611890611394565b6118a48161189e8454611764565b84611830565b602080601f8311600181146118d957600084156118c15750858301515b600019600386901b1c1916600185901b17855561083c565b600085815260208120601f198616915b82811015611908578886015182559484019460019091019084016118e9565b50858210156119265787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6020808252818101839052600090604080840186845b87811015611995576001600160a01b038061196684611295565b16845280611975878501611295565b16848701525081840135848401526060928301929091019060010161194c565b5090979650505050505050565b9384526001600160a01b0392831660208501526001600160e01b031991909116604084015216606082015260800190565b6000602082840312156119e557600080fd5b81516016811061056d57600080fd5b6020810160168310611a0857611a0861133e565b91905290565b600060208284031215611a2057600080fd5b5051919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60208082528181018390526000906040808401600586901b8501820187855b88811015611b1f57878303603f190184528135368b9003605e19018112611a9557600080fd5b8a018035845260606001600160a01b03611ab0898401611295565b168886015286820135601e19833603018112611acb57600080fd5b90910187810191903567ffffffffffffffff811115611ae957600080fd5b803603831315611af857600080fd5b8188870152611b0a8287018285611a27565b96890196955050509186019150600101611a6f565b509098975050505050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201611b6357634e487b7160e01b600052601160045260246000fd5b5060010190565b6020808252818101839052600090604080840186845b87811015611995576001600160a01b0380611b9a84611295565b16845280611ba9878501611295565b16848701525081840135848401526060808301359084015260809283019290910190600101611b80565b6020808252818101839052600090604080840186845b87811015611995576001600160a01b03611c0283611295565b16835281850135858401529183019190830190600101611be956fea2646970667358221220c4f69884e3ea579fa4bce018af79680a3a0b35657faa264ccd9d715bc781b38364736f6c63430008130033";

type FundingTeamConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FundingTeamConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FundingTeam__factory extends ContractFactory {
  constructor(...args: FundingTeamConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    erc20Token_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FundingTeam> {
    return super.deploy(erc20Token_, overrides || {}) as Promise<FundingTeam>;
  }
  override getDeployTransaction(
    erc20Token_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(erc20Token_, overrides || {});
  }
  override attach(address: string): FundingTeam {
    return super.attach(address) as FundingTeam;
  }
  override connect(signer: Signer): FundingTeam__factory {
    return super.connect(signer) as FundingTeam__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FundingTeamInterface {
    return new utils.Interface(_abi) as FundingTeamInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FundingTeam {
    return new Contract(address, _abi, signerOrProvider) as FundingTeam;
  }
}
