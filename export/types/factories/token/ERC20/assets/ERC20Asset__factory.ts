/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC20Asset,
  ERC20AssetInterface,
} from "../../../../token/ERC20/assets/ERC20Asset";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "assetName_",
        type: "string",
      },
      {
        internalType: "string",
        name: "profileName_",
        type: "string",
      },
      {
        internalType: "address",
        name: "erc20Token_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "enum IProfileACL.ProfileAuthorizationStatus",
        name: "",
        type: "uint8",
      },
    ],
    name: "ProfileACLActionForbidden",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "string",
        name: "oldProfile",
        type: "string",
      },
      {
        indexed: true,
        internalType: "string",
        name: "newProfile",
        type: "string",
      },
    ],
    name: "AssetProfileUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum IAsset.AssetSafeModeStatus",
        name: "status",
        type: "uint8",
      },
    ],
    name: "AssetSafeModeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "assetAccessControl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetInfo",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "profile",
            type: "string",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "version",
            type: "string",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "accessControl",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "enum IAsset.AssetType",
            name: "atype",
            type: "uint8",
          },
          {
            internalType: "enum IAsset.AssetSafeModeStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct IAsset.AssetInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetProfile",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetSafeMode",
    outputs: [
      {
        internalType: "enum IAsset.AssetSafeModeStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "profileName",
        type: "string",
      },
    ],
    name: "assetSetProfile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IAsset.AssetSafeModeStatus",
        name: "status",
        type: "uint8",
      },
    ],
    name: "assetSetSafeMode",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "assetToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetType",
    outputs: [
      {
        internalType: "enum IAsset.AssetType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "assetVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "tokenApprove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "tokenTransfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "tokenTransferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recepient",
        type: "address",
      },
    ],
    name: "withdrawBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200193f3803806200193f833981016040819052620000349162000322565b600080546001600160a01b031916331790558251600411156200008d5760405162461bcd60e51b815260206004820152600c60248201526b496e76616c6964204e616d6560a01b60448201526064015b60405180910390fd5b6001600160a01b0381163b620000db5760405162461bcd60e51b815260206004820152601260248201527124b73b30b634b21022a92199182a37b5b2b760711b604482015260640162000084565b6040516301ffc9a760e01b81526336372b0760e01b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa15801562000127573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200014d9190620003af565b158015620001ca57506040516301ffc9a760e01b815263a0f7caf160e01b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa158015620001a2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001c89190620003af565b155b156200020e5760405162461bcd60e51b815260206004820152601260248201527124b63632b3b0b61022a92199182a37b5b2b760711b604482015260640162000084565b60046200021c848262000469565b50600380546001600160a01b0319166001600160a01b0383161790556005805460ff19166001179055600262000253838262000469565b5050505062000535565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200028557600080fd5b81516001600160401b0380821115620002a257620002a26200025d565b604051601f8301601f19908116603f01168101908282118183101715620002cd57620002cd6200025d565b81604052838152602092508683858801011115620002ea57600080fd5b600091505b838210156200030e5785820183015181830184015290820190620002ef565b600093810190920192909252949350505050565b6000806000606084860312156200033857600080fd5b83516001600160401b03808211156200035057600080fd5b6200035e8783880162000273565b945060208601519150808211156200037557600080fd5b50620003848682870162000273565b604086015190935090506001600160a01b0381168114620003a457600080fd5b809150509250925092565b600060208284031215620003c257600080fd5b81518015158114620003d357600080fd5b9392505050565b600181811c90821680620003ef57607f821691505b6020821081036200041057634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200046457600081815260208120601f850160051c810160208610156200043f5750805b601f850160051c820191505b8181101562000460578281556001016200044b565b5050505b505050565b81516001600160401b038111156200048557620004856200025d565b6200049d81620004968454620003da565b8462000416565b602080601f831160018114620004d55760008415620004bc5750858301515b600019600386901b1c1916600185901b17855562000460565b600085815260208120601f198616915b828110156200050657888601518255948401946001909101908401620004e5565b5085821015620005255787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6113fa80620005456000396000f3fe6080604052600436106101175760003560e01c8063756af45f1161009a578063a33b122911610061578063a33b12291461032e578063a40bee501461034c578063b69ef8a81461036e578063c9230c5d14610381578063f2fde38b1461039657005b8063756af45f1461028d5780638da5cb5b146102ad578063961974ba146102cb5780639c7597b2146102eb5780639e1a4d191461030b57005b80634cfb9949116100de5780634cfb99491461020357806358e9abf2146102235780635bc213ec1461023857806368cdafe614610258578063715018a61461027857005b806301ffc9a7146101205780630cd689f5146101555780631083f761146101755780633c872e5f146101a75780633fe3347a146101e757005b3661011e57005b005b34801561012c57600080fd5b5061014061013b366004610e09565b6103b6565b60405190151581526020015b60405180910390f35b34801561016157600080fd5b50610140610170366004610e4f565b610408565b34801561018157600080fd5b506003546001600160a01b03165b6040516001600160a01b03909116815260200161014c565b3480156101b357600080fd5b5060408051808201909152600e81526d3b191719171816a634ba37b3b2b760911b60208201525b60405161014c9190610ec9565b3480156101f357600080fd5b50600160405161014c9190610f06565b34801561020f57600080fd5b5060055460ff1660405161014c9190610f24565b34801561022f57600080fd5b506101da610499565b34801561024457600080fd5b5061011e610253366004610f48565b61052b565b34801561026457600080fd5b50610140610273366004610e4f565b6105b4565b34801561028457600080fd5b5061011e6105ff565b34801561029957600080fd5b5061011e6102a8366004610ff9565b610613565b3480156102b957600080fd5b506000546001600160a01b031661018f565b3480156102d757600080fd5b506101406102e6366004611014565b610658565b3480156102f757600080fd5b50610140610306366004611050565b6106f1565b34801561031757600080fd5b50610320610851565b60405190815260200161014c565b34801561033a57600080fd5b506001546001600160a01b031661018f565b34801561035857600080fd5b506103616108c3565b60405161014c9190611071565b34801561037a57600080fd5b5047610320565b34801561038d57600080fd5b506101da610ab4565b3480156103a257600080fd5b5061011e6103b1366004610ff9565b610ac3565b60006001600160e01b03198216630e51ab8560e01b14806103e757506001600160e01b031982166306c181fb60e41b145b8061040257506301ffc9a760e01b6001600160e01b03198316145b92915050565b600061041a630cd689f560e01b610b1e565b60035460405163095ea7b360e01b81526001600160a01b038581166004830152602482018590529091169063095ea7b3906044015b6020604051808303816000875af115801561046e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104929190611142565b9392505050565b6060600280546104a890611164565b80601f01602080910402602001604051908101604052809291908181526020018280546104d490611164565b80156105215780601f106104f657610100808354040283529160200191610521565b820191906000526020600020905b81548152906001019060200180831161050457829003601f168201915b5050505050905090565b61053b6316f084fb60e21b610b1e565b80604051610549919061119e565b6040518091039020600260405161056091906111ba565b604051809103902061056f3390565b6001600160a01b03167fe6fa79c1f2ea3c82570c2be794a3d87196e039c8b4a9aa1bb4cd1130649ec82a60405160405180910390a460026105b0828261127f565b5050565b60006105c6633466d7f360e11b610b1e565b60035460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018590529091169063a9059cbb9060440161044f565b610607610c2a565b6106116000610c7d565b565b61062363756af45f60e01b610b1e565b6040516001600160a01b038216904780156108fc02916000818181858888f193505050501580156105b0573d6000803e3d6000fd5b600061066a634b0cba5d60e11b610b1e565b6003546040516323b872dd60e01b81526001600160a01b038681166004830152858116602483015260448201859052909116906323b872dd906064016020604051808303816000875af11580156106c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e99190611142565b949350505050565b60015460405160009182916001600160a01b03909116906305e0be309061071d906002906020016111ba565b60408051808303601f190181529082905280516020909101206001600160e01b031960e084901b168252610760913090634e3acbd960e11b90339060040161133f565b6020604051808303816000875af115801561077f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a39190611370565b905060008160158111156107b9576107b9610edc565b146107e2578060405163d8f7573d60e01b81526004016107d99190611391565b60405180910390fd5b6005805484919060ff1916600183600281111561080157610801610edc565b021790555030336001600160a01b03167f28f96d72c32e5791a0cb87cd75ccd24d30671b1044c06512ab88be89b053b8ca856040516108409190610f24565b60405180910390a350600192915050565b6003546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561089a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108be91906113ab565b905090565b61090b604080516101008101825260608082526020820181905291810182905260009181018290526080810182905260a081018290529060c082019081526020016000905290565b6040518061010001604052806002805461092490611164565b80601f016020809104026020016040519081016040528092919081815260200182805461095090611164565b801561099d5780601f106109725761010080835404028352916020019161099d565b820191906000526020600020905b81548152906001019060200180831161098057829003601f168201915b50505050508152602001600480546109b490611164565b80601f01602080910402602001604051908101604052809291908181526020018280546109e090611164565b8015610a2d5780601f10610a0257610100808354040283529160200191610a2d565b820191906000526020600020905b815481529060010190602001808311610a1057829003601f168201915b5050509183525050604080518082018252600e81526d3b191719171816a634ba37b3b2b760911b6020808301919091528301526003546001600160a01b03908116918301919091526001805482166060840152600054909116608083015260a082015260055460c09091019060ff166002811115610aad57610aad610edc565b9052919050565b6060600480546104a890611164565b6001600160a01b038116610b125760405162461bcd60e51b815260206004820152601660248201527513dddb98589b194e881058d8d95cdcc811195b9a595960521b60448201526064016107d9565b610b1b81610c7d565b50565b6001546001600160a01b031615610c0e576001546040516000916001600160a01b0316906305e0be3090610b57906002906020016111ba565b604051602081830303815290604052805190602001203085610b763390565b6040518563ffffffff1660e01b8152600401610b95949392919061133f565b6020604051808303816000875af1158015610bb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd89190611370565b90506000816015811115610bee57610bee610edc565b146105b0578060405163d8f7573d60e01b81526004016107d99190611391565b630d021c7560e01b6001600160e01b0319821601610b1b57610b1b5b6000546001600160a01b031633146106115760405162461bcd60e51b815260206004820152601660248201527513dddb98589b194e881058d8d95cdcc811195b9a595960521b60448201526064016107d9565b610c8d63f2fde38b60e01b610b1e565b6000546001546001600160a01b039182169116610cb3836001600160a01b03163b151590565b15610d8d576040516301ffc9a760e01b815263047d056160e11b60048201526001600160a01b038416906301ffc9a790602401602060405180830381865afa158015610d03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d279190611142565b610d615760405162461bcd60e51b815260206004820152600b60248201526a125b1b1959d85b081050d360aa1b60448201526064016107d9565b600180546001600160a01b0385166001600160a01b031991821617909155600080549091169055610db5565b600080546001600160a01b0385166001600160a01b0319918216179091556001805490911690555b6001600160a01b03808416908316610dcd5781610dcf565b825b6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b600060208284031215610e1b57600080fd5b81356001600160e01b03198116811461049257600080fd5b80356001600160a01b0381168114610e4a57600080fd5b919050565b60008060408385031215610e6257600080fd5b610e6b83610e33565b946020939093013593505050565b60005b83811015610e94578181015183820152602001610e7c565b50506000910152565b60008151808452610eb5816020860160208601610e79565b601f01601f19169290920160200192915050565b6020815260006104926020830184610e9d565b634e487b7160e01b600052602160045260246000fd5b60048110610f0257610f02610edc565b9052565b602081016104028284610ef2565b60038110610f0257610f02610edc565b602081016104028284610f14565b634e487b7160e01b600052604160045260246000fd5b600060208284031215610f5a57600080fd5b813567ffffffffffffffff80821115610f7257600080fd5b818401915084601f830112610f8657600080fd5b813581811115610f9857610f98610f32565b604051601f8201601f19908116603f01168101908382118183101715610fc057610fc0610f32565b81604052828152876020848701011115610fd957600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561100b57600080fd5b61049282610e33565b60008060006060848603121561102957600080fd5b61103284610e33565b925061104060208501610e33565b9150604084013590509250925092565b60006020828403121561106257600080fd5b81356003811061049257600080fd5b6020815260008251610100806020850152611090610120850183610e9d565b91506020850151601f19808685030160408701526110ae8483610e9d565b93506040870151915080868503016060870152506110cc8382610e9d565b92505060608501516110e960808601826001600160a01b03169052565b5060808501516001600160a01b03811660a08601525060a08501516001600160a01b03811660c08601525060c085015161112660e0860182610ef2565b5060e085015161113882860182610f14565b5090949350505050565b60006020828403121561115457600080fd5b8151801515811461049257600080fd5b600181811c9082168061117857607f821691505b60208210810361119857634e487b7160e01b600052602260045260246000fd5b50919050565b600082516111b0818460208701610e79565b9190910192915050565b60008083546111c881611164565b600182811680156111e057600181146111f557611224565b60ff1984168752821515830287019450611224565b8760005260208060002060005b8581101561121b5781548a820152908401908201611202565b50505082870194505b50929695505050505050565b601f82111561127a57600081815260208120601f850160051c810160208610156112575750805b601f850160051c820191505b8181101561127657828155600101611263565b5050505b505050565b815167ffffffffffffffff81111561129957611299610f32565b6112ad816112a78454611164565b84611230565b602080601f8311600181146112e257600084156112ca5750858301515b600019600386901b1c1916600185901b178555611276565b600085815260208120601f198616915b82811015611311578886015182559484019460019091019084016112f2565b508582101561132f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b9384526001600160a01b0392831660208501526001600160e01b031991909116604084015216606082015260800190565b60006020828403121561138257600080fd5b81516016811061049257600080fd5b60208101601683106113a5576113a5610edc565b91905290565b6000602082840312156113bd57600080fd5b505191905056fea2646970667358221220b6fceaba238a0d00707a4a172ad1035853bcaa8d524555aafece7998b397037064736f6c63430008130033";

type ERC20AssetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20AssetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Asset__factory extends ContractFactory {
  constructor(...args: ERC20AssetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    assetName_: PromiseOrValue<string>,
    profileName_: PromiseOrValue<string>,
    erc20Token_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20Asset> {
    return super.deploy(
      assetName_,
      profileName_,
      erc20Token_,
      overrides || {}
    ) as Promise<ERC20Asset>;
  }
  override getDeployTransaction(
    assetName_: PromiseOrValue<string>,
    profileName_: PromiseOrValue<string>,
    erc20Token_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      assetName_,
      profileName_,
      erc20Token_,
      overrides || {}
    );
  }
  override attach(address: string): ERC20Asset {
    return super.attach(address) as ERC20Asset;
  }
  override connect(signer: Signer): ERC20Asset__factory {
    return super.connect(signer) as ERC20Asset__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20AssetInterface {
    return new utils.Interface(_abi) as ERC20AssetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Asset {
    return new Contract(address, _abi, signerOrProvider) as ERC20Asset;
  }
}
