<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="c0f95897-d344-4a4d-9d91-8fddc7839041" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.npmignore" beforeDir="false" afterPath="$PROJECT_DIR$/.npmignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/contracts/test/ERC20TokenTest.sol" beforeDir="false" afterPath="$PROJECT_DIR$/contracts/test/ERC20TokenTest.sol" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/contracts/token/ERC20/ERC20.sol" beforeDir="false" afterPath="$PROJECT_DIR$/contracts/token/ERC20/ERC20.sol" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/contracts/token/ERC20/IERC20.sol" beforeDir="false" afterPath="$PROJECT_DIR$/contracts/token/ERC20/IERC20.sol" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/contracts/token/ERC20/assets/ERC20Asset.sol" beforeDir="false" afterPath="$PROJECT_DIR$/contracts/token/ERC20/assets/ERC20Asset.sol" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/contracts/token/ERC20/assets/ERC20AssetExtra.sol" beforeDir="false" afterPath="$PROJECT_DIR$/contracts/token/ERC20/assets/ERC20AssetExtra.sol" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/contracts/token/ERC20/assets/ERC20AssetLockable.sol" beforeDir="false" afterPath="$PROJECT_DIR$/contracts/token/ERC20/assets/ERC20AssetLockable.sol" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/contracts/token/ERC20/assets/IAsset.sol" beforeDir="false" afterPath="$PROJECT_DIR$/contracts/token/ERC20/assets/IAsset.sol" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/contracts/token/ERC20/assets/IERC20Asset.sol" beforeDir="false" afterPath="$PROJECT_DIR$/contracts/token/ERC20/assets/IERC20Asset.sol" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/contracts/token/ERC20/assets/IERC20AssetExtra.sol" beforeDir="false" afterPath="$PROJECT_DIR$/contracts/token/ERC20/assets/IERC20AssetExtra.sol" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/contracts/token/ERC20/assets/IERC20AssetLockable.sol" beforeDir="false" afterPath="$PROJECT_DIR$/contracts/token/ERC20/assets/IERC20AssetLockable.sol" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/contracts/token/ERC20/extensions/ERC20Burnable.sol" beforeDir="false" afterPath="$PROJECT_DIR$/contracts/token/ERC20/extensions/ERC20Burnable.sol" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/contracts/token/ERC20/extensions/ERC20Extra.sol" beforeDir="false" afterPath="$PROJECT_DIR$/contracts/token/ERC20/extensions/ERC20Extra.sol" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/contracts/token/ERC20/extensions/ERC20Lockable.sol" beforeDir="false" afterPath="$PROJECT_DIR$/contracts/token/ERC20/extensions/ERC20Lockable.sol" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/contracts/token/ERC20/extensions/ERC20Mintable.sol" beforeDir="false" afterPath="$PROJECT_DIR$/contracts/token/ERC20/extensions/ERC20Mintable.sol" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/contracts/token/ERC20/extensions/ERC20Pausable.sol" beforeDir="false" afterPath="$PROJECT_DIR$/contracts/token/ERC20/extensions/ERC20Pausable.sol" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/contracts/token/ERC20/extensions/ERC20Permitable.sol" beforeDir="false" afterPath="$PROJECT_DIR$/contracts/token/ERC20/extensions/ERC20Permitable.sol" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/contracts/token/ERC20/extensions/ERC20Taxable.sol" beforeDir="false" afterPath="$PROJECT_DIR$/contracts/token/ERC20/extensions/ERC20Taxable.sol" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/contracts/token/ERC20/extensions/IERC20Burnable.sol" beforeDir="false" afterPath="$PROJECT_DIR$/contracts/token/ERC20/extensions/IERC20Burnable.sol" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/contracts/token/ERC20/extensions/IERC20Extra.sol" beforeDir="false" afterPath="$PROJECT_DIR$/contracts/token/ERC20/extensions/IERC20Extra.sol" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/contracts/token/ERC20/extensions/IERC20Lockable.sol" beforeDir="false" afterPath="$PROJECT_DIR$/contracts/token/ERC20/extensions/IERC20Lockable.sol" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/contracts/token/ERC20/extensions/IERC20Metadata.sol" beforeDir="false" afterPath="$PROJECT_DIR$/contracts/token/ERC20/extensions/IERC20Metadata.sol" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/contracts/token/ERC20/extensions/IERC20Mintable.sol" beforeDir="false" afterPath="$PROJECT_DIR$/contracts/token/ERC20/extensions/IERC20Mintable.sol" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/contracts/token/ERC20/extensions/IERC20Pausable.sol" beforeDir="false" afterPath="$PROJECT_DIR$/contracts/token/ERC20/extensions/IERC20Pausable.sol" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/contracts/token/ERC20/extensions/IERC20Permitable.sol" beforeDir="false" afterPath="$PROJECT_DIR$/contracts/token/ERC20/extensions/IERC20Permitable.sol" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/contracts/token/ERC20/extensions/IERC20Taxable.sol" beforeDir="false" afterPath="$PROJECT_DIR$/contracts/token/ERC20/extensions/IERC20Taxable.sol" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/contracts/utils/BasisPointsMath.sol" beforeDir="false" afterPath="$PROJECT_DIR$/contracts/utils/BasisPointsMath.sol" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/contracts/utils/EIP712.sol" beforeDir="false" afterPath="$PROJECT_DIR$/contracts/utils/EIP712.sol" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/export/abi/ERC20.json" beforeDir="false" afterPath="$PROJECT_DIR$/export/abi/ERC20.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/export/abi/ERC20Asset.json" beforeDir="false" afterPath="$PROJECT_DIR$/export/abi/ERC20Asset.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/export/abi/ERC20AssetExtra.json" beforeDir="false" afterPath="$PROJECT_DIR$/export/abi/ERC20AssetExtra.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/export/abi/ERC20AssetLockable.json" beforeDir="false" afterPath="$PROJECT_DIR$/export/abi/ERC20AssetLockable.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/export/abi/FundingTeam.json" beforeDir="false" afterPath="$PROJECT_DIR$/export/abi/FundingTeam.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/export/abi/PublicSales.json" beforeDir="false" afterPath="$PROJECT_DIR$/export/abi/PublicSales.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/export/abi/TestToken.json" beforeDir="false" afterPath="$PROJECT_DIR$/export/abi/TestToken.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/export/types/contracts/test/ERC20TokenTest.sol/TestToken.ts" beforeDir="false" afterPath="$PROJECT_DIR$/export/types/contracts/test/ERC20TokenTest.sol/TestToken.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/export/types/factories/contracts/test/ERC20AssetFundingTeamTest.sol/FundingTeam__factory.ts" beforeDir="false" afterPath="$PROJECT_DIR$/export/types/factories/contracts/test/ERC20AssetFundingTeamTest.sol/FundingTeam__factory.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/export/types/factories/contracts/test/ERC20AssetPublicSalesTest.sol/PublicSales__factory.ts" beforeDir="false" afterPath="$PROJECT_DIR$/export/types/factories/contracts/test/ERC20AssetPublicSalesTest.sol/PublicSales__factory.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/export/types/factories/contracts/test/ERC20TokenTest.sol/TestToken__factory.ts" beforeDir="false" afterPath="$PROJECT_DIR$/export/types/factories/contracts/test/ERC20TokenTest.sol/TestToken__factory.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/export/types/factories/contracts/token/ERC20/ERC20__factory.ts" beforeDir="false" afterPath="$PROJECT_DIR$/export/types/factories/contracts/token/ERC20/ERC20__factory.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/export/types/factories/contracts/token/ERC20/assets/ERC20AssetExtra__factory.ts" beforeDir="false" afterPath="$PROJECT_DIR$/export/types/factories/contracts/token/ERC20/assets/ERC20AssetExtra__factory.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/export/types/factories/contracts/token/ERC20/assets/ERC20AssetLockable__factory.ts" beforeDir="false" afterPath="$PROJECT_DIR$/export/types/factories/contracts/token/ERC20/assets/ERC20AssetLockable__factory.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/export/types/factories/contracts/token/ERC20/assets/ERC20Asset__factory.ts" beforeDir="false" afterPath="$PROJECT_DIR$/export/types/factories/contracts/token/ERC20/assets/ERC20Asset__factory.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/ERC20TokenTest.test.ts" beforeDir="false" afterPath="$PROJECT_DIR$/test/ERC20TokenTest.test.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/yarn.lock" beforeDir="false" afterPath="$PROJECT_DIR$/yarn.lock" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="TypeScript File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2OXm7fpB9LYjVLHrX1FtMMA4Sf6" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "last_opened_file_path": "/home/sina/Workspace/InnToken/livelyProject/src/litogen/test",
    "nodejs.mocha.mocha_node_package_dir": "/home/sina/Workspace/InnToken/livelyProject/src/litogen/node_modules/mocha",
    "nodejs_package_manager_path": "yarn",
    "ts.external.directory.path": "/home/sina/Workspace/InnToken/livelyProject/src/litogen/node_modules/typescript/lib",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/test" />
      <recent name="$PROJECT_DIR$" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/contracts/test" />
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/src" />
      <recent name="$PROJECT_DIR$/test" />
      <recent name="$PROJECT_DIR$/generator" />
    </key>
  </component>
  <component name="RunManager" selected="npm.test">
    <configuration name="generator.test.ts" type="NodeJSConfigurationType" nameIsGenerated="true" node-parameters="--require ts-node/register" path-to-js-file="$PROJECT_DIR$/test/generator.test.ts" working-dir="$PROJECT_DIR$">
      <method v="2" />
    </configuration>
    <configuration name="build" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="build" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="clean" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="clean" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="test" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="test" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="Litogen Generator Tests" type="mocha-javascript-test-runner" temporary="true" nameIsGenerated="true">
      <node-interpreter>project</node-interpreter>
      <node-options />
      <mocha-package>$PROJECT_DIR$/node_modules/mocha</mocha-package>
      <working-directory>$PROJECT_DIR$</working-directory>
      <pass-parent-env>true</pass-parent-env>
      <ui>bdd</ui>
      <extra-mocha-options>--require ts-node/register</extra-mocha-options>
      <test-kind>SUITE</test-kind>
      <test-file>$PROJECT_DIR$/test/generator.test.ts</test-file>
      <test-names>
        <name value="Litogen Generator Tests" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="Litogen Generator Tests.Should generate ERC20 success" type="mocha-javascript-test-runner" temporary="true" nameIsGenerated="true">
      <node-interpreter>project</node-interpreter>
      <node-options />
      <mocha-package>$PROJECT_DIR$/node_modules/mocha</mocha-package>
      <working-directory>$PROJECT_DIR$</working-directory>
      <pass-parent-env>true</pass-parent-env>
      <ui>bdd</ui>
      <extra-mocha-options>--require ts-node/register</extra-mocha-options>
      <test-kind>TEST</test-kind>
      <test-file>$PROJECT_DIR$/test/generator.test.ts</test-file>
      <test-names>
        <name value="Litogen Generator Tests" />
        <name value="Should generate ERC20 success" />
      </test-names>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="npm.test" />
        <item itemvalue="npm.build" />
        <item itemvalue="npm.clean" />
        <item itemvalue="Mocha.Litogen Generator Tests.Should generate ERC20 success" />
        <item itemvalue="Mocha.Litogen Generator Tests" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="c0f95897-d344-4a4d-9d91-8fddc7839041" name="Changes" comment="" />
      <created>1681715134256</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1681715134256</updated>
      <workItem from="1681715135677" duration="40349000" />
      <workItem from="1681882801491" duration="34250000" />
      <workItem from="1682059573567" duration="12730000" />
      <workItem from="1682166670721" duration="14963000" />
      <workItem from="1682311814730" duration="22189000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>